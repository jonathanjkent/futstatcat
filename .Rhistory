colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$round <- i
proj$league <- lg.code
all.projs <- rbind(all.projs, proj)
status <- percent((i)/(max(results$jornada)))
#print(paste0("Trajectories: ",status))
print(paste0("Trajectories: Jornada ",i," Complete"))
}
all.projs <- all.projs[complete.cases(all.projs), ]
# Add jornada back to predictions, scale
games$key <- paste0(games$home, games$away)
predictions$key <- paste0(predictions.temp$team1, predictions.temp$team2)
predictions <- predictions %>% left_join(games, by = "key") %>% select(jornada, team1, p1, pd, p2, team2)
predictions$p1 <- predictions$p1*100
predictions$pd <- predictions$pd*100
predictions$p2 <- predictions$p2*100
# Add league code
final.table$league <- lg.code
predictions$league <- lg.code
# Add to other leagues
aa.final.table <- rbind(aa.final.table, final.table)
aa.predictions <- rbind(aa.predictions, predictions)
aa.all.projs <- rbind(aa.all.projs, all.projs)
}
# Remove NA rows
aa.final.table <- aa.final.table[2:nrow(aa.final.table),]
aa.predictions <- aa.predictions[2:nrow(aa.predictions),]
#aa.all.projs <- aa.all.projs[2:nrow(aa.all.projs),] #Only if re-running trajectories
# Write CSVs
write_csv(aa.final.table, "data_tables.csv")
write_csv(aa.predictions, "data_games.csv")
write_csv(aa.all.projs, "data_trajectories.csv")
### Make website pages
# League pages
teamnames <- read_csv("~/Google Drive/Futbol/teamlist.csv", col_types = cols())
for (i in 1:nrow(leagues)){
# Basics
lg.name <- as.character(leagues[i,1])
lg.code <- as.character(leagues[i,2])
lg.type1 <- as.character(leagues[i,7])
lg.type2 <- as.character(leagues[i,8])
lg.stub <- tolower(gsub("[[:punct:]]", "", lg.name))
lg.stub <- gsub("[[:space:]]", "-", lg.stub)
# Find Campió Projectat
campio <- aa.final.table %>% filter(league == lg.code) %>% arrange(desc(proj.points))
campio <- campio[1,1]
campio <- campio %>% left_join(teamnames, by = "team")
campio <- as.character(campio[1,2])
# Write page
dashes <- '---'
l1 <- 'date: "2020-06-17"'
l2 <- 'image:'
l3 <- '  preview_only: true'
l4 <- paste0('summary: Campió Projectat, ',campio)
l5 <- 'tags:'
l6 <- '  - Estiu 2020'
l7 <- paste0('title: ', lg.name)
l8 <- '### Projecció de la classificació final'
l9 <- paste0(" | [Trajectòria dels equips](/competicions/",lg.stub,"-trajectoria/) |")
br <- '<br>'
start <- '```{r echo=F,warning=FALSE,message=FALSE}'
l10 <- 'library(tidyverse)'
l11 <- 'library(kableExtra)'
l12 <- 'teamnames <- read_csv("~/Google Drive/Futbol/teamlist.csv", col_types = cols())'
l13 <- 'table <- read_csv("~/Google Drive/Futbol/data_tables.csv", col_types = cols())'
l14 <- paste0("table <- table %>% filter(league == '", lg.code, "')")
l15 <- 'table <- teamnames %>% left_join(table, by = "team") %>% arrange(desc(proj.points))'
l16 <- "table <- table[complete.cases(table),]"
l17 <- 'table$linkteam <- iconv(table$fullname,to="ASCII//TRANSLIT")'
l18 <- 'table$linkteam <- tolower(gsub("[[:punct:]]", "", table$linkteam))'
l19 <- 'table$linkteam <- gsub("[[:space:]]", "-", table$linkteam)'
l20 <- 'table$team <- paste0("[", table$shortname, "](/clubs/", table$linkteam,"-",table$league,")")'
l21 <- 'table <- table %>% select(-shortname,-fullname,-league,-linkteam, -typex)'
l21x <- 'table <- table %>% select(-shortname,-fullname,-league,-linkteam)'
l22 <- paste0("kable(table, digits = 1, align = 'lcccccccc', row.names = FALSE, col.names = c('Club', 'Punts', 'GD', '", lg.type1, "', '", lg.type2,"', 'Descens', 'Favor', 'Contra', 'Qualitat')) %>% add_header_above(c('Projecció de la Classificació' = 1, 'Final' = 2, 'Probabilitat (%)' = 3, 'xGols' = 3)) %>% column_spec(1, bold = T) %>% column_spec(3, border_right = T) %>% column_spec(6, border_right = T)")
l22x <- paste0("kable(table, digits = 1, align = 'lccccccccc', row.names = FALSE, col.names = c('Club', 'Punts', 'GD', '", lg.type1, "', '", lg.type2,"', 'Europa', 'Descens', 'Favor', 'Contra', 'Qualitat')) %>% add_header_above(c('Projecció de la Classificació' = 1, 'Final' = 2, 'Probabilitat (%)' = 4, 'xGols' = 3)) %>% column_spec(1, bold = T) %>% column_spec(3, border_right = T) %>% column_spec(7, border_right = T)")
end <- "```"
teamfolder <- paste0("~/Google Drive/Futbol/futstatcat/content/competicions/",lg.stub)
setwd(teamfolder)
writeLines(c(dashes,l1,l2,l3,l4,l5,l6,l7,dashes,l9,br,br,start,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21,l22,end), "index.rmd")
if (lg.code == "primera"){writeLines(c(dashes,l1,l2,l3,l4,l5,l6,l7,dashes,l9,br,br,start,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21x,l22x,end), "index.rmd")}
}
# Team pages
clubs <- aa.final.table %>% select(team, league)
clubs <- clubs %>% left_join(teamnames, by = "team")
lgs <- leagues
colnames(lgs)[2] <- "league"
colnames(lgs)[1] <- "lg.name"
clubs <- clubs %>% left_join(lgs, by = "league")
for (i in 1:nrow(clubs)){
club <- as.character(clubs[i,1])
lg.code <- as.character(clubs[i,2])
lg.name <- as.character(clubs[i,5])
club.name <- as.character(clubs[i,4])
type1 <- as.numeric(clubs[i,7])
type2 <- as.numeric(clubs[i,8])
type3 <- as.numeric(clubs[i,9])
name1 <- as.character(clubs[i,10])
name2 <- as.character(clubs[i,11])
l1 <- 'date: "2020-06-17"'
l2 <- paste0("title: '", club.name, "'")
l3 <- paste0("subtitle: '", lg.name,"'")
l4 <- paste0("summary: '", lg.name,"'")
l5 <- '### Trajectòria'
start2 <- "```{r fig.width=8, fig.height=5, echo=F,warning=FALSE,message=FALSE}"
l6 <- 'library(tidyverse)'
l7 <- 'library(ggplot2)'
l8 <- paste0("d <- read_csv('~/Google Drive/Futbol/data_trajectories.csv', col_types = cols()) %>% filter(team == '",club,"')")
l9 <- paste0("h <- read_csv('~/Google Drive/Futbol/data_tables.csv', col_types = cols()) %>% filter(league == '",lg.code,"')")
l10a <- paste0("type1 <- as.numeric(h[",type1,",2] + h[",(type1+1),",2])/2")
l10b <- paste0("type2 <- as.numeric(h[",type2,",2] + h[",(type2+1),",2])/2")
l10c <- paste0("type3 <- as.numeric(h[",type3,",2] + h[",(type3+1),",2])/2")
l11 <- paste0("p <- ggplot(data=d) + geom_line(aes(round,points), size = 1.5, color = 'blue') + geom_hline(aes(yintercept=type1), linetype='dashed', color='#5c5c5c') + geom_text(aes(0,type1,label = '",name1,"', vjust = -.5, hjust = 'left'), color='#5c5c5c') + geom_hline(aes(yintercept=type2), linetype='dashed', color='#5c5c5c') + geom_text(aes(0,type2,label = '",name2,"', vjust = -.5, hjust = 'left'), color='#5c5c5c') + geom_hline(aes(yintercept=type3), linetype='dashed', color='#5c5c5c') + geom_text(aes(0,type3,label = 'Descens', vjust = -.5, hjust = 'left'), color='#5c5c5c')")
l12 <- 'p + theme_minimal() + labs(x = "Jornada", y = "Punts Projectats")'
space <- " "
l15 <- '### Pròxims partits'
l16 <- 'library(kableExtra)'
l17 <- 'teamnames <- read_csv("~/Google Drive/Futbol/teamlist.csv", col_types = cols()) %>% select(-fullname)'
l18 <- 'games <- read_csv("~/Google Drive/Futbol/data_games.csv", col_types = cols())'
l19 <- paste0("games <- games %>% filter(team1 == '",club,"' | team2 == '",club,"')")
l20 <- 'names(teamnames) <- c("home", "team1")'
l21 <- 'games <- games %>% left_join(teamnames, by = "team1")'
l22 <- 'names(teamnames) <- c("away", "team2")'
l23 <- 'games <- games %>% left_join(teamnames, by = "team2") %>% select(jornada, home, p1, pd, p2, away)'
l24 <- 'kable(games, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "Guanyar", "Empatar", "Guanyar", "Equip")) %>% add_header_above(c("2019-20" = 1, "Local" = 2, "(%)" = 1, "Visitant" = 2)) %>% column_spec(2, bold = T) %>% column_spec(6, bold = T)'
filename <- iconv(club.name,to="ASCII//TRANSLIT")
filename <- tolower(gsub("[[:punct:]]", "", filename))
filename <- paste0(filename,"-",lg.code,".rmd")
filename <- gsub("[[:space:]]", "-", filename)
setwd("~/Google Drive/Futbol/futstatcat/content/clubs")
writeLines(c(dashes,l1,l2,l3,l4,dashes,l5,start2,l6,l7,l8,l9,l10a,l10b,l10c,l11,l12,end,space,l15,start,l16,l17,l18,l19,l20,l21,l22,l23,l24,end), filename)
}
# Update trajectory pages
render("~/Google Drive/Futbol/futstatcat/content/competicions/la-liga-trajectoria/index.rmd")
render("~/Google Drive/Futbol/futstatcat/content/competicions/segona-a-trajectoria/index.rmd")
# Start site
setwd("~/Google Drive/Futbol/futstatcat")
serve_site()
library(tidyverse, quietly = T)
library(rvest)
library(goalmodel)
library(stringr)
library(scales)
library(blogdown)
library(rmarkdown)
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
n.sim <- 10000
# Read list of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
# Select leagues to be updated
leagues <- leagues[1:2,] # Estiu 2020
leagues <- leagues[1,] # La Liga
#leagues <- leagues[2,] # Segona
# Blank datasets
aa.final.table <- NA
aa.predictions <- NA
#aa.all.projs <- NA # If re-running trajectories
#trajstart <- 1 # If re-running trajectories
aa.all.projs <- read_csv("data_trajectories.csv", col_types = cols()) # Remove if re-running trajectories
trajstart <- aa.all.projs %>% group_by(league) %>% summarise(round = max(round))
trajstart <- min(trajstart$round)-1
aa.all.projs <- aa.all.projs %>% filter(round < trajstart) # And fix i statement (line ~224)
for (i in 1:nrow(leagues)){
# For each league
lg.name <- as.character(leagues[i,1])
lg.code <- as.character(leagues[i,2])
lg.group <- as.numeric(leagues[i,3])
lg.type1 <- as.numeric(leagues[i,4])
lg.type2 <- as.numeric(leagues[i,5])
lg.type3 <- as.numeric(leagues[i,6])
lg.type1name <- as.character(leagues[i,7])
lg.type2name <- as.character(leagues[i,8])
print(paste0("Now running: ",lg.name," || League ",i," of ", nrow(leagues)))
print("Scraping...")
# Scrape page
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.rstd') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create dataset of all games
games <- data.frame(home = local_data, away = vist_data, score = result_data, date = dates_data)
games$score <- str_sub(games$score, -11, -7)
# Recode dates
games <- games %>% separate(date, c("day", "month", "year"))
games$year <- as.numeric(games$year) + 2000
month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul")
month.num <- c(8,9,10,11,12,1,2,3,4,5,6,7)
month.recode <- cbind.data.frame(month,month.num)
games <- games %>% left_join(month.recode, by = "month")
games$date <- as.Date(with(games, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
games <- games %>% select(-day, -month, -year, -month.num)
# Add jornada
teams <- length(unique(games$home))
jornadas <- (teams-1)*2
games$jornada <- rep(1:jornadas, each = (teams/2))
# Separate compeleted and uncompleted games
schedule <- games %>% filter(grepl("x|:|A", games$score) | grepl("x|'|A", games$score)) %>% select(-score)
results <- filter(games, grepl("-", games$score))
results <- filter(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Add in historic results
clublist <- as.character(unique(games$home))
history <- read_csv("gameshistory.csv", col_types = cols())
history <- history %>% filter(home %in% clublist & away %in% clublist)
histresults <- rbind(history,results)
print("Simulating...")
# Model
weights <- weights_dc(histresults$date, xi=xi.set)
model <- goalmodel(goals1 = histresults$home.score, goals2 = histresults$away.score,
team1 = histresults$home, team2=histresults$away, weights = weights, rs=TRUE)
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Simulate unplayed games
sims <- data.frame(predictions, sim.number = rep(1:n.sim, each = nrow(predictions)))
sims$random <- runif((nrow(sims)),0,1)
sims <- mutate(sims, team1.points = ifelse(random < p1, 3,
ifelse(random > (1-p2), 0, 1)))
sims <- mutate(sims, team2.points = ifelse(team1.points == 0, 3,
ifelse(team1.points == 3, 0, 1)))
# Create points variables
results <- mutate(results, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
results <- mutate(results, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
# Add in known results
results.for.sims <- data.frame(results, sim.number = rep(1:n.sim, each = nrow(results)))
results.for.sims <- results.for.sims %>% select(home, away, sim.number, home.points, away.points, home.score, away.score)
names(results.for.sims) <- c("team1","team2","sim.number","team1.points","team2.points","team1.score","team2.score")
sim.seasons <- sims %>% select(team1,team2,sim.number,team1.points,team2.points)
sim.seasons$team1.score <- sim.seasons$team1.points/2
sim.seasons$team2.score <- sim.seasons$team2.points/2
sim.seasons <- rbind(sim.seasons,results.for.sims)
if (nrow(schedule) == 0){sim.seasons <- results.for.sims}
# Add in opposite leg (home/away) for each matchup
sim.seasons$matchup <- paste0(sim.seasons$team1,sim.seasons$team2,sim.seasons$sim.number)
legs <- sim.seasons
legs$matchup <- paste0(sim.seasons$team2,sim.seasons$team1,sim.seasons$sim.number)
legs <- legs %>% select(-team1,-team2,-sim.number)
names(legs) <- c("team2.points.leg","team1.points.leg","team2.score.leg","team1.score.leg","matchup")
sim.seasons <- sim.seasons %>% left_join(legs, by = "matchup")
# Tally matchup points and goal differential
sim.seasons$team1.matchup.points <- sim.seasons$team1.points + sim.seasons$team1.points.leg
sim.seasons$team1.matchup.gd <- sim.seasons$team1.score + sim.seasons$team1.score.leg - sim.seasons$team2.score - sim.seasons$team2.score.leg
# Matchups as dataframe
matchups <- sim.seasons %>% select(matchup,team1.matchup.points,team1.matchup.gd)
# Create table for each simulated season
sim.tables <- sim.seasons %>% group_by(team1,sim.number) %>% summarize(points = sum(team1.matchup.points)) %>% arrange(desc(points)) %>% arrange(sim.number)
# Create first and second tiebreakers
sim.tables$tie.team <- c(rep(NA, 1), as.character(sim.tables$team1))[1 : length(sim.tables$team1)]
sim.tables$tie.points <- c(rep(NA, 1), sim.tables$points)[1 : length(sim.tables$points)]
sim.tables$matchup <- paste0(sim.tables$team1,sim.tables$tie.team,sim.tables$sim.number)
sim.tables <- sim.tables %>% left_join(matchups, by = "matchup")
sim.tables$tiebreak1 <- ifelse(sim.tables$points == sim.tables$tie.points, sim.tables$team1.matchup.points, 2)
sim.tables$tiebreak2 <- ifelse(sim.tables$points == sim.tables$tie.points, sim.tables$team1.matchup.gd, 0)
sim.tables$team <- sim.tables$team1
sim.tables <- sim.tables %>% ungroup() %>% select(team,sim.number, points, tiebreak1, tiebreak2)
# Add third tiebreaker (goal differential) and sort
gd <- predict_expg(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
gd$t1gd <- gd$expg1-gd$expg2
gd$t2gd <- gd$expg2-gd$expg1
results$home.gd <- results$home.score-results$away.score
results$away.gd <- results$away.score-results$home.score
lg.gd <- as_tibble_col(c(as.character(results$home),as.character(results$away),as.character(gd$team1), as.character(gd$team2)),column_name = "team")
lg.gd$gd <- c(as.numeric(results$home.gd),as.numeric(results$away.gd),as.numeric(gd$t1gd), as.numeric(gd$t2gd))
lg.gd <- lg.gd %>% group_by(team) %>% summarize(gd = sum(gd))
sim.tables <- sim.tables %>% left_join(lg.gd, by = "team")
sim.tables <- sim.tables %>% arrange(desc(gd)) %>% arrange(desc(tiebreak2)) %>% arrange(desc(tiebreak1)) %>% arrange(desc(points)) %>% arrange(sim.number)
# Add rank
sim.tables$rank <- rep(1:teams, times = (nrow(sim.tables)/teams))
type1 <- sim.tables %>% filter(rank <= lg.type1) %>%
group_by(team) %>% count() %>% mutate(type1 = (n/n.sim)*100) %>% select(-n) %>% ungroup()
type2 <- sim.tables %>% filter(rank < lg.type2) %>%
group_by(team) %>% count() %>% mutate(type2 = (n/n.sim)*100) %>% select(-n) %>% ungroup()
type3 <- sim.tables %>% filter(rank > lg.type3) %>%
group_by(team) %>% count() %>% mutate(type3 = (n/n.sim)*100) %>% select(-n) %>% ungroup()
typex <- sim.tables %>% filter(rank == 5 | rank == 6) %>%
group_by(team) %>% count() %>% mutate(typex = (n/n.sim)*100) %>% select(-n) %>% ungroup()
print("Simulation Complete")
# Create xGols
rate.sked <- results %>% select(home)
rate.sked <- unique(rate.sked)
colnames(rate.sked) <- "team"
rate.sked$team2 <- "nobody"
n <- nrow(rate.sked)+1
xgmodel <- model
xgmodel$parameters$attack[n] <- 0
names(xgmodel$parameters$attack[n]) <- c("nobody")
newnames <- names(xgmodel$parameters$attack)
newnames[n] <- "nobody"
names(xgmodel$parameters$attack) <- newnames
xgmodel$parameters$defense[n] <- 0
newnames <- names(xgmodel$parameters$defense)
newnames[n] <- "nobody"
names(xgmodel$parameters$defense) <- newnames
xgmodel$all_teams[n] <- "nobody"
rate.preds <- predict_expg(xgmodel, team1=rate.sked$team, team2=rate.sked$team2, return_df = TRUE)
rate.preds.away <- predict_expg(xgmodel, team1=rate.sked$team2, team2=rate.sked$team, return_df = TRUE)
rate.preds.away$team1 <- rate.preds.away$team2
rate.preds <- rate.preds %>% select(-team2) %>% left_join(rate.preds.away, by = "team1")
rate.preds$expg1 <- (rate.preds$expg1.x + rate.preds$expg2.y)/2
rate.preds$expg2 <- (rate.preds$expg2.x + rate.preds$expg1.y)/2
xgols <- rate.preds %>% select(team1, expg1, expg2) %>% rename(
team = team1,
off.rank = expg1,
def.rank = expg2)
# Create final table
final.table <- sim.tables %>% group_by(team) %>% summarize(proj.points = sum(points/n.sim)) %>% arrange(desc(proj.points))
final.table <- final.table %>% left_join(lg.gd, by = "team")
final.table <- final.table %>% left_join(type1, by = "team")
final.table <- final.table %>% left_join(type2, by = "team")
final.table <- final.table %>% left_join(typex, by = "team")
final.table <- final.table %>% left_join(type3, by = "team")
final.table <- final.table %>% left_join(xgols, by = "team")
final.table$qualitat <- (final.table$off.rank - final.table$def.rank + 3)*20
final.table[is.na(final.table)] <- 0
# Create trajectories
all.projs <- NA
for (i in trajstart:max(results$jornada)){
# Select jornadas
results.temp <- results %>% filter(jornada < (i+1))
results.temp.hist <- histresults %>% filter(jornada < (i+1))
results.other <- results %>% filter(jornada > (i))
results.other <- results.other %>% select(home, away, jornada)
schedule.temp <- schedule %>% select(-date)
schedule.temp <- rbind(schedule.temp, results.other)
# Model
weights <- weights_dc(results.temp.hist$date, xi=xi.set)
gm_res <- goalmodel(goals1 = results.temp.hist$home.score, goals2 = results.temp.hist$away.score,
team1 = results.temp.hist$home, team2=results.temp.hist$away, weights = weights, rs=TRUE)
predictions.temp <- predict_result(gm_res, team1=schedule.temp$home, team2=schedule.temp$away, return_df = TRUE)
# Current Table
table <- results.temp
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points)) %>% ungroup()
# Predicted Points
predictions.temp$home.points <- (predictions.temp$p1 * 3) + predictions.temp$pd
predictions.temp$away.points <- (predictions.temp$p2 * 3) + predictions.temp$pd
pred.home <- predictions.temp %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions.temp %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$round <- i
proj$league <- lg.code
all.projs <- rbind(all.projs, proj)
status <- percent((i)/(max(results$jornada)))
#print(paste0("Trajectories: ",status))
print(paste0("Trajectories: Jornada ",i," Complete"))
}
all.projs <- all.projs[complete.cases(all.projs), ]
# Add jornada back to predictions, scale
games$key <- paste0(games$home, games$away)
predictions$key <- paste0(predictions.temp$team1, predictions.temp$team2)
predictions <- predictions %>% left_join(games, by = "key") %>% select(jornada, team1, p1, pd, p2, team2)
predictions$p1 <- predictions$p1*100
predictions$pd <- predictions$pd*100
predictions$p2 <- predictions$p2*100
# Add league code
final.table$league <- lg.code
predictions$league <- lg.code
# Add to other leagues
aa.final.table <- rbind(aa.final.table, final.table)
aa.predictions <- rbind(aa.predictions, predictions)
aa.all.projs <- rbind(aa.all.projs, all.projs)
}
# Remove NA rows
aa.final.table <- aa.final.table[2:nrow(aa.final.table),]
aa.predictions <- aa.predictions[2:nrow(aa.predictions),]
#aa.all.projs <- aa.all.projs[2:nrow(aa.all.projs),] #Only if re-running trajectories
# Write CSVs
write_csv(aa.final.table, "data_tables.csv")
write_csv(aa.predictions, "data_games.csv")
write_csv(aa.all.projs, "data_trajectories.csv")
### Make website pages
# League pages
teamnames <- read_csv("~/Google Drive/Futbol/teamlist.csv", col_types = cols())
for (i in 1:nrow(leagues)){
# Basics
lg.name <- as.character(leagues[i,1])
lg.code <- as.character(leagues[i,2])
lg.type1 <- as.character(leagues[i,7])
lg.type2 <- as.character(leagues[i,8])
lg.stub <- tolower(gsub("[[:punct:]]", "", lg.name))
lg.stub <- gsub("[[:space:]]", "-", lg.stub)
# Find Campió Projectat
campio <- aa.final.table %>% filter(league == lg.code) %>% arrange(desc(proj.points))
campio <- campio[1,1]
campio <- campio %>% left_join(teamnames, by = "team")
campio <- as.character(campio[1,2])
# Write page
dashes <- '---'
l1 <- 'date: "2020-06-17"'
l2 <- 'image:'
l3 <- '  preview_only: true'
l4 <- paste0('summary: Campió Projectat, ',campio)
l5 <- 'tags:'
l6 <- '  - Estiu 2020'
l7 <- paste0('title: ', lg.name)
l8 <- '### Projecció de la classificació final'
l9 <- paste0(" | [Trajectòria dels equips](/competicions/",lg.stub,"-trajectoria/) |")
br <- '<br>'
start <- '```{r echo=F,warning=FALSE,message=FALSE}'
l10 <- 'library(tidyverse)'
l11 <- 'library(kableExtra)'
l12 <- 'teamnames <- read_csv("~/Google Drive/Futbol/teamlist.csv", col_types = cols())'
l13 <- 'table <- read_csv("~/Google Drive/Futbol/data_tables.csv", col_types = cols())'
l14 <- paste0("table <- table %>% filter(league == '", lg.code, "')")
l15 <- 'table <- teamnames %>% left_join(table, by = "team") %>% arrange(desc(proj.points))'
l16 <- "table <- table[complete.cases(table),]"
l17 <- 'table$linkteam <- iconv(table$fullname,to="ASCII//TRANSLIT")'
l18 <- 'table$linkteam <- tolower(gsub("[[:punct:]]", "", table$linkteam))'
l19 <- 'table$linkteam <- gsub("[[:space:]]", "-", table$linkteam)'
l20 <- 'table$team <- paste0("[", table$shortname, "](/clubs/", table$linkteam,"-",table$league,")")'
l21 <- 'table <- table %>% select(-shortname,-fullname,-league,-linkteam, -typex)'
l21x <- 'table <- table %>% select(-shortname,-fullname,-league,-linkteam)'
l22 <- paste0("kable(table, digits = 1, align = 'lcccccccc', row.names = FALSE, col.names = c('Club', 'Punts', 'GD', '", lg.type1, "', '", lg.type2,"', 'Descens', 'Favor', 'Contra', 'Qualitat')) %>% add_header_above(c('Projecció de la Classificació' = 1, 'Final' = 2, 'Probabilitat (%)' = 3, 'xGols' = 3)) %>% column_spec(1, bold = T) %>% column_spec(3, border_right = T) %>% column_spec(6, border_right = T)")
l22x <- paste0("kable(table, digits = 1, align = 'lccccccccc', row.names = FALSE, col.names = c('Club', 'Punts', 'GD', '", lg.type1, "', '", lg.type2,"', 'Europa', 'Descens', 'Favor', 'Contra', 'Qualitat')) %>% add_header_above(c('Projecció de la Classificació' = 1, 'Final' = 2, 'Probabilitat (%)' = 4, 'xGols' = 3)) %>% column_spec(1, bold = T) %>% column_spec(3, border_right = T) %>% column_spec(7, border_right = T)")
end <- "```"
teamfolder <- paste0("~/Google Drive/Futbol/futstatcat/content/competicions/",lg.stub)
setwd(teamfolder)
writeLines(c(dashes,l1,l2,l3,l4,l5,l6,l7,dashes,l9,br,br,start,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21,l22,end), "index.rmd")
if (lg.code == "primera"){writeLines(c(dashes,l1,l2,l3,l4,l5,l6,l7,dashes,l9,br,br,start,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21x,l22x,end), "index.rmd")}
}
# Team pages
clubs <- aa.final.table %>% select(team, league)
clubs <- clubs %>% left_join(teamnames, by = "team")
lgs <- leagues
colnames(lgs)[2] <- "league"
colnames(lgs)[1] <- "lg.name"
clubs <- clubs %>% left_join(lgs, by = "league")
for (i in 1:nrow(clubs)){
club <- as.character(clubs[i,1])
lg.code <- as.character(clubs[i,2])
lg.name <- as.character(clubs[i,5])
club.name <- as.character(clubs[i,4])
type1 <- as.numeric(clubs[i,7])
type2 <- as.numeric(clubs[i,8])
type3 <- as.numeric(clubs[i,9])
name1 <- as.character(clubs[i,10])
name2 <- as.character(clubs[i,11])
l1 <- 'date: "2020-06-17"'
l2 <- paste0("title: '", club.name, "'")
l3 <- paste0("subtitle: '", lg.name,"'")
l4 <- paste0("summary: '", lg.name,"'")
l5 <- '### Trajectòria'
start2 <- "```{r fig.width=8, fig.height=5, echo=F,warning=FALSE,message=FALSE}"
l6 <- 'library(tidyverse)'
l7 <- 'library(ggplot2)'
l8 <- paste0("d <- read_csv('~/Google Drive/Futbol/data_trajectories.csv', col_types = cols()) %>% filter(team == '",club,"')")
l9 <- paste0("h <- read_csv('~/Google Drive/Futbol/data_tables.csv', col_types = cols()) %>% filter(league == '",lg.code,"')")
l10a <- paste0("type1 <- as.numeric(h[",type1,",2] + h[",(type1+1),",2])/2")
l10b <- paste0("type2 <- as.numeric(h[",type2,",2] + h[",(type2+1),",2])/2")
l10c <- paste0("type3 <- as.numeric(h[",type3,",2] + h[",(type3+1),",2])/2")
l11 <- paste0("p <- ggplot(data=d) + geom_line(aes(round,points), size = 1.5, color = 'blue') + geom_hline(aes(yintercept=type1), linetype='dashed', color='#5c5c5c') + geom_text(aes(0,type1,label = '",name1,"', vjust = -.5, hjust = 'left'), color='#5c5c5c') + geom_hline(aes(yintercept=type2), linetype='dashed', color='#5c5c5c') + geom_text(aes(0,type2,label = '",name2,"', vjust = -.5, hjust = 'left'), color='#5c5c5c') + geom_hline(aes(yintercept=type3), linetype='dashed', color='#5c5c5c') + geom_text(aes(0,type3,label = 'Descens', vjust = -.5, hjust = 'left'), color='#5c5c5c')")
l12 <- 'p + theme_minimal() + labs(x = "Jornada", y = "Punts Projectats")'
space <- " "
l15 <- '### Pròxims partits'
l16 <- 'library(kableExtra)'
l17 <- 'teamnames <- read_csv("~/Google Drive/Futbol/teamlist.csv", col_types = cols()) %>% select(-fullname)'
l18 <- 'games <- read_csv("~/Google Drive/Futbol/data_games.csv", col_types = cols())'
l19 <- paste0("games <- games %>% filter(team1 == '",club,"' | team2 == '",club,"')")
l20 <- 'names(teamnames) <- c("home", "team1")'
l21 <- 'games <- games %>% left_join(teamnames, by = "team1")'
l22 <- 'names(teamnames) <- c("away", "team2")'
l23 <- 'games <- games %>% left_join(teamnames, by = "team2") %>% select(jornada, home, p1, pd, p2, away)'
l24 <- 'kable(games, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "Guanyar", "Empatar", "Guanyar", "Equip")) %>% add_header_above(c("2019-20" = 1, "Local" = 2, "(%)" = 1, "Visitant" = 2)) %>% column_spec(2, bold = T) %>% column_spec(6, bold = T)'
filename <- iconv(club.name,to="ASCII//TRANSLIT")
filename <- tolower(gsub("[[:punct:]]", "", filename))
filename <- paste0(filename,"-",lg.code,".rmd")
filename <- gsub("[[:space:]]", "-", filename)
setwd("~/Google Drive/Futbol/futstatcat/content/clubs")
writeLines(c(dashes,l1,l2,l3,l4,dashes,l5,start2,l6,l7,l8,l9,l10a,l10b,l10c,l11,l12,end,space,l15,start,l16,l17,l18,l19,l20,l21,l22,l23,l24,end), filename)
}
# Update trajectory pages
render("~/Google Drive/Futbol/futstatcat/content/competicions/la-liga-trajectoria/index.rmd")
render("~/Google Drive/Futbol/futstatcat/content/competicions/segona-a-trajectoria/index.rmd")
# Start site
setwd("~/Google Drive/Futbol/futstatcat")
serve_site()
View(aa.final.table)
