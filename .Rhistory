}
for (i in 1:(current.week-1)){
url <- paste0("https://www.fantasypros.com/nfl/stats/",p,".php?league=3276084&scoring=PPR&range=week&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(table[1,k],"_",table[2,k],"_actual"))}
names(table)[1] <- "rank"
names(table)[2] <- "player"
table$player <- gsub("[][()]", "", table$player)
table <- table[3:nrow(table),]
table$week <- i
if (i == 1){
actual <- table
} else {actual <- bind_rows(actual,table)}
}
pos <- proj %>% left_join(actual, by = c("player","week"))
if (p == "qb"){
all <- pos
} else {all <- bind_rows(all,pos)}
}
# all <- tibble(type_convert(all))
# qb <- all %>% filter(position == "qb") %>% select_if(colSums(!is.na(.))>500)
# rb <- all %>% filter(position == "rb") %>% select_if(colSums(!is.na(.))>500)
# wr <- all %>% filter(position == "wr") %>% select_if(colSums(!is.na(.))>500)
# te <- all %>% filter(position == "te") %>% select_if(colSums(!is.na(.))>500)
# Kickers
for (i in 1:current.week){
url <- paste0("https://www.fantasypros.com/nfl/projections/k.php?max-yes=&min-yes=&scoring=PPR&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_proj"))}
names(table)[1] <- "player"
table <- table[2:nrow(table),]
table$week <- i
table$position <- "k"
if (i == 1){
proj <- table
} else {proj <- bind_rows(proj,table)}
}
for (i in 1:(current.week-1)){
url <- paste0("https://www.fantasypros.com/nfl/stats/k.php?league=3276084&scoring=PPR&range=week&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_actual"))}
names(table)[1] <- "rank"
names(table)[2] <- "player"
table$player <- gsub("[][()]", "", table$player)
table <- table[2:nrow(table),]
table$week <- i
if (i == 1){
actual <- table
} else {actual <- bind_rows(actual,table)}
}
kickers <- proj %>% left_join(actual, by = c("player","week"))
# DST
for (i in 1:current.week){
url <- paste0("https://www.fantasypros.com/nfl/projections/dst.php?max-yes=&min-yes=&scoring=PPR&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_proj"))}
names(table)[1] <- "player"
table$player <- gsub(" ", "", table$player)
table <- table[2:nrow(table),]
table$week <- i
table$position <- "dst"
if (i == 1){
proj <- table
} else {proj <- bind_rows(proj,table)}
}
for (i in 1:(current.week-1)){
url <- paste0("https://www.fantasypros.com/nfl/stats/dst.php?league=3276084&scoring=PPR&range=week&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_actual"))}
names(table)[1] <- "rank"
names(table)[2] <- "player"
table$player <- gsub("[][()]", "", table$player)
table$player <- str_sub(table$player,1,-4)
table$player <- gsub(" ", "", table$player)
table <- table[2:nrow(table),]
table$week <- i
if (i == 1){
actual <- table
} else {actual <- bind_rows(actual,table)}
}
dst <- proj %>% left_join(actual, by = c("player","week"))
all <- tibble(type_convert(all))
kickers <- tibble(type_convert(kickers))
dst <- tibble(type_convert(dst))
all <- bind_rows(all,kickers,dst)
all <- all %>% select(player,position,week,everything())
all[,3:77] <- lapply(all[,3:77], as.numeric)
all$wilfork_proj <- ifelse(all$position=="qb",round((all$passing_yds_proj/25) + (all$passing_tds_proj*6) + (all$passing_ints_proj*-2) + (all$rushing_yds_proj/10) + (all$rushing_tds_proj*6),0),NA)
all$wilfork_actual <- ifelse(all$position=="qb",floor(all$passing_yds_actual/25) + (all$passing_td_actual*6) + (all$passing_int_actual*-2) + floor(all$rushing_yds_actual/10) + (all$rushing_td_actual*6) + (all$misc_fl_actual*-2),NA)
all$wilfork_proj <- ifelse(all$position=="rb" | all$position=="wr",round((all$rushing_yds_proj/10) + (all$rushing_tds_proj*6) + (all$receiving_rec_proj) + (all$receiving_yds_proj/10) + (all$receiving_tds_proj*6) + (all$misc_fl_proj*-2),0),all$wilfork_proj)
all$wilfork_actual <- ifelse(all$position=="rb" | all$position=="wr",floor(all$rushing_yds_actual/10) + (all$rushing_td_actual*6) + (all$receiving_rec_actual) + floor(all$receiving_yds_actual/10) + (all$receiving_td_actual*6) + (all$misc_fl_actual*-2),all$wilfork_actual)
all$wilfork_proj <- ifelse(all$position=="te",round((all$receiving_rec_proj) + (all$receiving_yds_proj/10) + (all$receiving_tds_proj*6) + (all$misc_fl_proj*-2),0),all$wilfork_proj)
all$wilfork_actual <- ifelse(all$position=="te",(all$receiving_rec_actual) + floor(all$receiving_yds_actual/10) + (all$receiving_td_actual*6) + (all$misc_fl_actual*-2),all$wilfork_actual)
all$wilfork_proj <- ifelse(all$position=="k" | all$position=="dst", round(all$fpts_proj,0),all$wilfork_proj)
all$wilfork_actual <- ifelse(all$position=="k" | all$position=="dst", round(all$fpts_actual,0),all$wilfork_actual)
# # Custom Points
#
# qb$wilfork_proj <- round((qb$passing_yds_proj/25) + (qb$passing_tds_proj*6) + (qb$passing_ints_proj*-2) +
#   (qb$rushing_yds_proj/10) + (qb$rushing_tds_proj*6),0)
# qb$wilfork_actual <- floor(qb$passing_yds_actual/25) + (qb$passing_td_actual*6) + (qb$passing_int_actual*-2) +
#                            floor(qb$rushing_yds_actual/10) + (qb$rushing_td_actual*6) + (qb$misc_fl_actual*-2)
#
# rb$wilfork_proj <- round((rb$rushing_yds_proj/10) + (rb$rushing_tds_proj*6) +
#   (rb$receiving_rec_proj) + (rb$receiving_yds_proj/10) + (rb$receiving_tds_proj*6) +
#   (rb$misc_fl_proj*-2),0)
# rb$wilfork_actual <- floor(rb$rushing_yds_actual/10) + (rb$rushing_td_actual*6) +
#                            (rb$receiving_rec_actual) + floor(rb$receiving_yds_actual/10) + (rb$receiving_td_actual*6) +
#                            (rb$misc_fl_actual*-2)
#
# all$wilfork_proj <- round((all$rushing_yds_proj/10) + (all$rushing_tds_proj*6) +
#                            (all$receiving_rec_proj) + (all$receiving_yds_proj/10) + (all$receiving_tds_proj*6) +
#                            (all$misc_fl_proj*-2),0)
# all$wilfork_actual <- floor(all$rushing_yds_actual/10) + (all$rushing_td_actual*6) +
#   (all$receiving_rec_actual) + floor(all$receiving_yds_actual/10) + (all$receiving_td_actual*6) +
#   (all$misc_fl_actual*-2)
#
# te$wilfork_proj <- round((te$receiving_rec_proj) + (te$receiving_yds_proj/10) + (te$receiving_tds_proj*6) +
#                            (te$misc_fl_proj*-2),0)
# te$wilfork_actual <- (te$receiving_rec_actual) + floor(te$receiving_yds_actual/10) + (te$receiving_td_actual*6) +
#   (te$misc_fl_actual*-2)
# Models
model.data <- all %>% filter(wilfork_proj > 4) %>% select(wilfork_actual,wilfork_proj,position) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
model <- stan_glm(wilfork_actual ~ wilfork_proj + position, data = model.data, family = poisson)
# qb.model.data <- qb %>% filter(passing_att_actual > 0 & wilfork_proj > 5) %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# qb.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = qb.model.data, family = poisson)
#
# rb.model.data <- rb %>% filter(rushing_att_actual > 0 | receiving_tgt_actual > 0) %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# rb.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = rb.model.data, family = poisson)
#
# wr.model.data <- wr %>% filter(rushing_att_actual > 0 | receiving_tgt_actual > 0) %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# wr.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = wr.model.data, family = poisson)
#
# te.model.data <- te %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# te.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = te.model.data, family = poisson)
#
# k.model <- stan_glm(fpts_actual ~ fpts_proj, data = kickers, family = poisson)
#
# dst.model.data <- dst %>% select(fpts_actual,fpts_proj) %>% mutate(fpts_actual = fpts_actual + abs(min(fpts_actual, na.rm = T)))
# dst.model <- stan_glm(fpts_actual ~ fpts_proj, data = dst.model.data, family = poisson)
starters <- all %>% filter(week == 16) %>% select(player,position,wilfork_proj) %>% filter(player %in% current.starters)
preds <- rbind(data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)))
names(preds) <- starters$player
preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
preds$points <- preds$points - abs(min(all$wilfork_actual,na.rm = T))
preds$sim <- rep(1:(nrow(preds)/20),each = 20)
preds$points <- ifelse(preds$player == "Kirk Cousins MIN",27,preds$points)
preds$points <- ifelse(preds$player == "Alvin Kamara NO",55,preds$points)
preds$points <- ifelse(preds$player == "Justin Jefferson MIN",27,preds$points)
preds$points <- ifelse(preds$player == "Wil Lutz NO",27,preds$points)
# starters <- qb %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Kyler Murray ARI" | player == "Kirk Cousins MIN")
# preds <- rbind(data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)))
# names(preds) <- starters$player
# qb.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# qb.preds$points <- qb.preds$points - abs(min(qb$wilfork_actual,na.rm = T))
# qb.preds$sim <- rep(1:(nrow(qb.preds)/2),each = (nrow(qb.preds)/nrow(preds)))
#
#
# starters <- rb %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Nick Chubb CLE" | player == "Miles Sanders PHI" | player == "David Johnson HOU" | player == "Alvin Kamara NO" | player == "Nyheim Hines IND" | player == "J.D. McKissic WAS")
# preds <- rbind(data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)))
# names(preds) <- starters$player
# rb.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# rb.preds$points <- rb.preds$points - abs(min(rb$wilfork_actual,na.rm = T))
# rb.preds$sim <- rep(1:(nrow(rb.preds)/(nrow(rb.preds)/nrow(preds))),each = (nrow(rb.preds)/nrow(preds)))
#
#
# starters <- wr %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Justin Jefferson MIN" | player == "Allen Robinson II CHI" | player == "Robert Woods LAR" | player == "DeAndre Hopkins ARI" | player == "Cole Beasley BUF" | player == "Brandon Aiyuk SF")
# preds <- rbind(data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)))
# names(preds) <- starters$player
# wr.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# wr.preds$points <- wr.preds$points - abs(min(all$wilfork_actual,na.rm = T))
# wr.preds$sim <- rep(1:(nrow(wr.preds)/(nrow(wr.preds)/nrow(preds))),each = (nrow(wr.preds)/nrow(preds)))
#
#
# starters <- te %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Darren Waller LV" | player == "Dallas Goedert PHI")
# preds <- rbind(data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)))
# names(preds) <- starters$player
# te.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# te.preds$points <- te.preds$points - abs(min(te$wilfork_actual,na.rm = T))
# te.preds$sim <- rep(1:(nrow(te.preds)/(nrow(te.preds)/nrow(preds))),each = (nrow(te.preds)/nrow(preds)))
#
#
# starters <- kickers %>% filter(week == 16) %>% select(player,fpts_proj) %>% filter(player == "Wil Lutz NO" | player == "Greg Zuerlein DAL")
# preds <- rbind(data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)))
# names(preds) <- starters$player
# k.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# k.preds$sim <- rep(1:(nrow(k.preds)/(nrow(k.preds)/nrow(preds))),each = (nrow(k.preds)/nrow(preds)))
#
# starters <- dst %>% filter(week == 16) %>% select(player,fpts_proj) %>% filter(player == "ClevelandBrowns" | player == "MiamiDolphins")
# preds <- rbind(data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)))
# names(preds) <- starters$player
# dst.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# dst.preds$points <- dst.preds$points - abs(min(dst$fpts_actual,na.rm = T))
# dst.preds$sim <- rep(1:(nrow(dst.preds)/(nrow(dst.preds)/nrow(preds))),each = (nrow(dst.preds)/nrow(preds)))
wilfork.starters <- tibble(player = current.starters)
wilfork.starters$team <- "Gaskin Dobbins"
wilfork.starters$team[11:20] <- "S's Super Team"
final <- preds %>% left_join(wilfork.starters, by = "player")
tally <- final %>% group_by(team,sim) %>% summarise(points = sum(points))
h2h <- bind_cols(tally[1:(nrow(tally)/2),],tally[(nrow(tally)/2+1):nrow(tally),])
h2h$winner <- ifelse(h2h$points...3>h2h$points...6,h2h$team...1,h2h$team...4)
champion <- h2h %>% group_by(winner) %>% count() %>% mutate(n = n/240)
names(champion) <- c("team","champ_pct")
mean <- tally %>% group_by(team) %>% summarize(mean_pts = mean(points))
champion <- champion %>% left_join(mean, by = "team")
print(ggplotly(ggplot(tally,aes(points,color=team)) + geom_density() + theme_minimal()))
print(champion)
preds$points <- ifelse(preds$player == "Justin Jefferson MIN",14,preds$points)
preds$points <- ifelse(preds$player == "Wil Lutz NO",10,preds$points)
# starters <- qb %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Kyler Murray ARI" | player == "Kirk Cousins MIN")
# preds <- rbind(data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)))
# names(preds) <- starters$player
# qb.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# qb.preds$points <- qb.preds$points - abs(min(qb$wilfork_actual,na.rm = T))
# qb.preds$sim <- rep(1:(nrow(qb.preds)/2),each = (nrow(qb.preds)/nrow(preds)))
#
#
# starters <- rb %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Nick Chubb CLE" | player == "Miles Sanders PHI" | player == "David Johnson HOU" | player == "Alvin Kamara NO" | player == "Nyheim Hines IND" | player == "J.D. McKissic WAS")
# preds <- rbind(data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)))
# names(preds) <- starters$player
# rb.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# rb.preds$points <- rb.preds$points - abs(min(rb$wilfork_actual,na.rm = T))
# rb.preds$sim <- rep(1:(nrow(rb.preds)/(nrow(rb.preds)/nrow(preds))),each = (nrow(rb.preds)/nrow(preds)))
#
#
# starters <- wr %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Justin Jefferson MIN" | player == "Allen Robinson II CHI" | player == "Robert Woods LAR" | player == "DeAndre Hopkins ARI" | player == "Cole Beasley BUF" | player == "Brandon Aiyuk SF")
# preds <- rbind(data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)))
# names(preds) <- starters$player
# wr.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# wr.preds$points <- wr.preds$points - abs(min(all$wilfork_actual,na.rm = T))
# wr.preds$sim <- rep(1:(nrow(wr.preds)/(nrow(wr.preds)/nrow(preds))),each = (nrow(wr.preds)/nrow(preds)))
#
#
# starters <- te %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Darren Waller LV" | player == "Dallas Goedert PHI")
# preds <- rbind(data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)))
# names(preds) <- starters$player
# te.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# te.preds$points <- te.preds$points - abs(min(te$wilfork_actual,na.rm = T))
# te.preds$sim <- rep(1:(nrow(te.preds)/(nrow(te.preds)/nrow(preds))),each = (nrow(te.preds)/nrow(preds)))
#
#
# starters <- kickers %>% filter(week == 16) %>% select(player,fpts_proj) %>% filter(player == "Wil Lutz NO" | player == "Greg Zuerlein DAL")
# preds <- rbind(data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)))
# names(preds) <- starters$player
# k.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# k.preds$sim <- rep(1:(nrow(k.preds)/(nrow(k.preds)/nrow(preds))),each = (nrow(k.preds)/nrow(preds)))
#
# starters <- dst %>% filter(week == 16) %>% select(player,fpts_proj) %>% filter(player == "ClevelandBrowns" | player == "MiamiDolphins")
# preds <- rbind(data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)))
# names(preds) <- starters$player
# dst.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# dst.preds$points <- dst.preds$points - abs(min(dst$fpts_actual,na.rm = T))
# dst.preds$sim <- rep(1:(nrow(dst.preds)/(nrow(dst.preds)/nrow(preds))),each = (nrow(dst.preds)/nrow(preds)))
wilfork.starters <- tibble(player = current.starters)
wilfork.starters$team <- "Gaskin Dobbins"
wilfork.starters$team[11:20] <- "S's Super Team"
final <- preds %>% left_join(wilfork.starters, by = "player")
tally <- final %>% group_by(team,sim) %>% summarise(points = sum(points))
h2h <- bind_cols(tally[1:(nrow(tally)/2),],tally[(nrow(tally)/2+1):nrow(tally),])
h2h$winner <- ifelse(h2h$points...3>h2h$points...6,h2h$team...1,h2h$team...4)
champion <- h2h %>% group_by(winner) %>% count() %>% mutate(n = n/240)
names(champion) <- c("team","champ_pct")
mean <- tally %>% group_by(team) %>% summarize(mean_pts = mean(points))
champion <- champion %>% left_join(mean, by = "team")
print(ggplotly(ggplot(tally,aes(points,color=team)) + geom_density() + theme_minimal()))
print(champion)
current.starters <- c("Kyler Murray ARI","Nick Chubb CLE","Miles Sanders PHI","David Johnson HOU","Justin Jefferson MIN","Allen Robinson II CHI", "Robert Woods LAR","Darren Waller LV","Wil Lutz NO","ClevelandBrowns","Kirk Cousins MIN","Alvin Kamara NO","Nyheim Hines IND","J.D. McKissic WAS","DeAndre Hopkins ARI","Cole Beasley BUF","Brandon Aiyuk SF","Dallas Goedert PHI","Greg Zuerlein DAL","MiamiDolphins")
library(tidyverse)
library(rvest)
library(progress)
library(rstanarm)
library(plotly)
current.week <- 16
positions <- c("qb","rb","wr","te")
pb <- progress_bar$new(format = "Players [:bar] :percent eta: :eta",total = 4)
for (p in positions){
pb$tick()
for (i in 1:current.week){
url <- paste0("https://www.fantasypros.com/nfl/projections/",p,".php?max-yes=&min-yes=&scoring=PPR&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(table[1,k],"_",table[2,k],"_proj"))}
names(table)[1] <- "player"
table <- table[3:nrow(table),]
table$week <- i
table$position <- p
if (i == 1){
proj <- table
} else {proj <- bind_rows(proj,table)}
}
for (i in 1:(current.week-1)){
url <- paste0("https://www.fantasypros.com/nfl/stats/",p,".php?league=3276084&scoring=PPR&range=week&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(table[1,k],"_",table[2,k],"_actual"))}
names(table)[1] <- "rank"
names(table)[2] <- "player"
table$player <- gsub("[][()]", "", table$player)
table <- table[3:nrow(table),]
table$week <- i
if (i == 1){
actual <- table
} else {actual <- bind_rows(actual,table)}
}
pos <- proj %>% left_join(actual, by = c("player","week"))
if (p == "qb"){
all <- pos
} else {all <- bind_rows(all,pos)}
}
# all <- tibble(type_convert(all))
# qb <- all %>% filter(position == "qb") %>% select_if(colSums(!is.na(.))>500)
# rb <- all %>% filter(position == "rb") %>% select_if(colSums(!is.na(.))>500)
# wr <- all %>% filter(position == "wr") %>% select_if(colSums(!is.na(.))>500)
# te <- all %>% filter(position == "te") %>% select_if(colSums(!is.na(.))>500)
# Kickers
for (i in 1:current.week){
url <- paste0("https://www.fantasypros.com/nfl/projections/k.php?max-yes=&min-yes=&scoring=PPR&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_proj"))}
names(table)[1] <- "player"
table <- table[2:nrow(table),]
table$week <- i
table$position <- "k"
if (i == 1){
proj <- table
} else {proj <- bind_rows(proj,table)}
}
for (i in 1:(current.week-1)){
url <- paste0("https://www.fantasypros.com/nfl/stats/k.php?league=3276084&scoring=PPR&range=week&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_actual"))}
names(table)[1] <- "rank"
names(table)[2] <- "player"
table$player <- gsub("[][()]", "", table$player)
table <- table[2:nrow(table),]
table$week <- i
if (i == 1){
actual <- table
} else {actual <- bind_rows(actual,table)}
}
kickers <- proj %>% left_join(actual, by = c("player","week"))
# DST
for (i in 1:current.week){
url <- paste0("https://www.fantasypros.com/nfl/projections/dst.php?max-yes=&min-yes=&scoring=PPR&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_proj"))}
names(table)[1] <- "player"
table$player <- gsub(" ", "", table$player)
table <- table[2:nrow(table),]
table$week <- i
table$position <- "dst"
if (i == 1){
proj <- table
} else {proj <- bind_rows(proj,table)}
}
for (i in 1:(current.week-1)){
url <- paste0("https://www.fantasypros.com/nfl/stats/dst.php?league=3276084&scoring=PPR&range=week&week=",i)
d <- read_html(url) %>% html_table()
table <- d[[1]]
for (k in 1:length(table)){names(table)[k] <- tolower(paste0(names(table)[k],"_actual"))}
names(table)[1] <- "rank"
names(table)[2] <- "player"
table$player <- gsub("[][()]", "", table$player)
table$player <- str_sub(table$player,1,-4)
table$player <- gsub(" ", "", table$player)
table <- table[2:nrow(table),]
table$week <- i
if (i == 1){
actual <- table
} else {actual <- bind_rows(actual,table)}
}
dst <- proj %>% left_join(actual, by = c("player","week"))
all <- tibble(type_convert(all))
kickers <- tibble(type_convert(kickers))
dst <- tibble(type_convert(dst))
all <- bind_rows(all,kickers,dst)
all <- all %>% select(player,position,week,everything())
all[,3:77] <- lapply(all[,3:77], as.numeric)
all$wilfork_proj <- ifelse(all$position=="qb",round((all$passing_yds_proj/25) + (all$passing_tds_proj*6) + (all$passing_ints_proj*-2) + (all$rushing_yds_proj/10) + (all$rushing_tds_proj*6),0),NA)
all$wilfork_actual <- ifelse(all$position=="qb",floor(all$passing_yds_actual/25) + (all$passing_td_actual*6) + (all$passing_int_actual*-2) + floor(all$rushing_yds_actual/10) + (all$rushing_td_actual*6) + (all$misc_fl_actual*-2),NA)
all$wilfork_proj <- ifelse(all$position=="rb" | all$position=="wr",round((all$rushing_yds_proj/10) + (all$rushing_tds_proj*6) + (all$receiving_rec_proj) + (all$receiving_yds_proj/10) + (all$receiving_tds_proj*6) + (all$misc_fl_proj*-2),0),all$wilfork_proj)
all$wilfork_actual <- ifelse(all$position=="rb" | all$position=="wr",floor(all$rushing_yds_actual/10) + (all$rushing_td_actual*6) + (all$receiving_rec_actual) + floor(all$receiving_yds_actual/10) + (all$receiving_td_actual*6) + (all$misc_fl_actual*-2),all$wilfork_actual)
all$wilfork_proj <- ifelse(all$position=="te",round((all$receiving_rec_proj) + (all$receiving_yds_proj/10) + (all$receiving_tds_proj*6) + (all$misc_fl_proj*-2),0),all$wilfork_proj)
all$wilfork_actual <- ifelse(all$position=="te",(all$receiving_rec_actual) + floor(all$receiving_yds_actual/10) + (all$receiving_td_actual*6) + (all$misc_fl_actual*-2),all$wilfork_actual)
all$wilfork_proj <- ifelse(all$position=="k" | all$position=="dst", round(all$fpts_proj,0),all$wilfork_proj)
all$wilfork_actual <- ifelse(all$position=="k" | all$position=="dst", round(all$fpts_actual,0),all$wilfork_actual)
# # Custom Points
#
# qb$wilfork_proj <- round((qb$passing_yds_proj/25) + (qb$passing_tds_proj*6) + (qb$passing_ints_proj*-2) +
#   (qb$rushing_yds_proj/10) + (qb$rushing_tds_proj*6),0)
# qb$wilfork_actual <- floor(qb$passing_yds_actual/25) + (qb$passing_td_actual*6) + (qb$passing_int_actual*-2) +
#                            floor(qb$rushing_yds_actual/10) + (qb$rushing_td_actual*6) + (qb$misc_fl_actual*-2)
#
# rb$wilfork_proj <- round((rb$rushing_yds_proj/10) + (rb$rushing_tds_proj*6) +
#   (rb$receiving_rec_proj) + (rb$receiving_yds_proj/10) + (rb$receiving_tds_proj*6) +
#   (rb$misc_fl_proj*-2),0)
# rb$wilfork_actual <- floor(rb$rushing_yds_actual/10) + (rb$rushing_td_actual*6) +
#                            (rb$receiving_rec_actual) + floor(rb$receiving_yds_actual/10) + (rb$receiving_td_actual*6) +
#                            (rb$misc_fl_actual*-2)
#
# all$wilfork_proj <- round((all$rushing_yds_proj/10) + (all$rushing_tds_proj*6) +
#                            (all$receiving_rec_proj) + (all$receiving_yds_proj/10) + (all$receiving_tds_proj*6) +
#                            (all$misc_fl_proj*-2),0)
# all$wilfork_actual <- floor(all$rushing_yds_actual/10) + (all$rushing_td_actual*6) +
#   (all$receiving_rec_actual) + floor(all$receiving_yds_actual/10) + (all$receiving_td_actual*6) +
#   (all$misc_fl_actual*-2)
#
# te$wilfork_proj <- round((te$receiving_rec_proj) + (te$receiving_yds_proj/10) + (te$receiving_tds_proj*6) +
#                            (te$misc_fl_proj*-2),0)
# te$wilfork_actual <- (te$receiving_rec_actual) + floor(te$receiving_yds_actual/10) + (te$receiving_td_actual*6) +
#   (te$misc_fl_actual*-2)
# Models
model.data <- all %>% filter(wilfork_proj > 4) %>% select(wilfork_actual,wilfork_proj,position) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
model <- stan_glm(wilfork_actual ~ wilfork_proj + position, data = model.data, family = poisson)
# qb.model.data <- qb %>% filter(passing_att_actual > 0 & wilfork_proj > 5) %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# qb.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = qb.model.data, family = poisson)
#
# rb.model.data <- rb %>% filter(rushing_att_actual > 0 | receiving_tgt_actual > 0) %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# rb.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = rb.model.data, family = poisson)
#
# wr.model.data <- wr %>% filter(rushing_att_actual > 0 | receiving_tgt_actual > 0) %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# wr.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = wr.model.data, family = poisson)
#
# te.model.data <- te %>% select(wilfork_actual,wilfork_proj) %>% mutate(wilfork_actual = wilfork_actual + abs(min(wilfork_actual, na.rm = T)))
# te.model <- stan_glm(wilfork_actual ~ wilfork_proj, data = te.model.data, family = poisson)
#
# k.model <- stan_glm(fpts_actual ~ fpts_proj, data = kickers, family = poisson)
#
# dst.model.data <- dst %>% select(fpts_actual,fpts_proj) %>% mutate(fpts_actual = fpts_actual + abs(min(fpts_actual, na.rm = T)))
# dst.model <- stan_glm(fpts_actual ~ fpts_proj, data = dst.model.data, family = poisson)
starters <- all %>% filter(week == 16) %>% select(player,position,wilfork_proj) %>% filter(player %in% current.starters)
preds <- rbind(data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)),data.frame(posterior_predict(model, newdata = starters)))
names(preds) <- starters$player
preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
preds$points <- preds$points - abs(min(all$wilfork_actual,na.rm = T))
preds$sim <- rep(1:(nrow(preds)/20),each = 20)
preds$points <- ifelse(preds$player == "Kirk Cousins MIN",27,preds$points)
preds$points <- ifelse(preds$player == "Alvin Kamara NO",55,preds$points)
preds$points <- ifelse(preds$player == "Justin Jefferson MIN",14,preds$points)
preds$points <- ifelse(preds$player == "Wil Lutz NO",10,preds$points)
preds$points <- ifelse(preds$player == "Kyler Murray ARI",14,preds$points)
preds$points <- ifelse(preds$player == "Darren Waller LV",16,preds$points)
preds$points <- ifelse(preds$player == "DeAndre Hopkins ARI",10,preds$points)
preds$points <- ifelse(preds$player == "Brandon Aiyuk SF",13,preds$points)
# starters <- qb %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Kyler Murray ARI" | player == "Kirk Cousins MIN")
# preds <- rbind(data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)),data.frame(posterior_predict(qb.model, newdata = starters)))
# names(preds) <- starters$player
# qb.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# qb.preds$points <- qb.preds$points - abs(min(qb$wilfork_actual,na.rm = T))
# qb.preds$sim <- rep(1:(nrow(qb.preds)/2),each = (nrow(qb.preds)/nrow(preds)))
#
#
# starters <- rb %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Nick Chubb CLE" | player == "Miles Sanders PHI" | player == "David Johnson HOU" | player == "Alvin Kamara NO" | player == "Nyheim Hines IND" | player == "J.D. McKissic WAS")
# preds <- rbind(data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)),data.frame(posterior_predict(rb.model, newdata = starters)))
# names(preds) <- starters$player
# rb.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# rb.preds$points <- rb.preds$points - abs(min(rb$wilfork_actual,na.rm = T))
# rb.preds$sim <- rep(1:(nrow(rb.preds)/(nrow(rb.preds)/nrow(preds))),each = (nrow(rb.preds)/nrow(preds)))
#
#
# starters <- wr %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Justin Jefferson MIN" | player == "Allen Robinson II CHI" | player == "Robert Woods LAR" | player == "DeAndre Hopkins ARI" | player == "Cole Beasley BUF" | player == "Brandon Aiyuk SF")
# preds <- rbind(data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)),data.frame(posterior_predict(wr.model, newdata = starters)))
# names(preds) <- starters$player
# wr.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# wr.preds$points <- wr.preds$points - abs(min(all$wilfork_actual,na.rm = T))
# wr.preds$sim <- rep(1:(nrow(wr.preds)/(nrow(wr.preds)/nrow(preds))),each = (nrow(wr.preds)/nrow(preds)))
#
#
# starters <- te %>% filter(week == 16) %>% select(player,wilfork_proj) %>% filter(player == "Darren Waller LV" | player == "Dallas Goedert PHI")
# preds <- rbind(data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)),data.frame(posterior_predict(te.model, newdata = starters)))
# names(preds) <- starters$player
# te.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# te.preds$points <- te.preds$points - abs(min(te$wilfork_actual,na.rm = T))
# te.preds$sim <- rep(1:(nrow(te.preds)/(nrow(te.preds)/nrow(preds))),each = (nrow(te.preds)/nrow(preds)))
#
#
# starters <- kickers %>% filter(week == 16) %>% select(player,fpts_proj) %>% filter(player == "Wil Lutz NO" | player == "Greg Zuerlein DAL")
# preds <- rbind(data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)),data.frame(posterior_predict(k.model, newdata = starters)))
# names(preds) <- starters$player
# k.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# k.preds$sim <- rep(1:(nrow(k.preds)/(nrow(k.preds)/nrow(preds))),each = (nrow(k.preds)/nrow(preds)))
#
# starters <- dst %>% filter(week == 16) %>% select(player,fpts_proj) %>% filter(player == "ClevelandBrowns" | player == "MiamiDolphins")
# preds <- rbind(data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)),data.frame(posterior_predict(dst.model, newdata = starters)))
# names(preds) <- starters$player
# dst.preds <- pivot_longer(preds, cols = 1:length(preds), names_to = "player", values_to = "points")
# dst.preds$points <- dst.preds$points - abs(min(dst$fpts_actual,na.rm = T))
# dst.preds$sim <- rep(1:(nrow(dst.preds)/(nrow(dst.preds)/nrow(preds))),each = (nrow(dst.preds)/nrow(preds)))
wilfork.starters <- tibble(player = current.starters)
wilfork.starters$team <- "Gaskin Dobbins"
wilfork.starters$team[11:20] <- "S's Super Team"
final <- preds %>% left_join(wilfork.starters, by = "player")
tally <- final %>% group_by(team,sim) %>% summarise(points = sum(points))
h2h <- bind_cols(tally[1:(nrow(tally)/2),],tally[(nrow(tally)/2+1):nrow(tally),])
h2h$winner <- ifelse(h2h$points...3>h2h$points...6,h2h$team...1,h2h$team...4)
champion <- h2h %>% group_by(winner) %>% count() %>% mutate(n = n/240)
names(champion) <- c("team","champ_pct")
mean <- tally %>% group_by(team) %>% summarize(mean_pts = mean(points))
champion <- champion %>% left_join(mean, by = "team")
print(ggplotly(ggplot(tally,aes(points,color=team)) + geom_density() + theme_minimal()))
print(champion)
# NFL Draft
source("~/Documents/draftorder.R")
# NFL Draft
source("~/Documents/draftorder.R")
