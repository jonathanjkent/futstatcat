model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
View(teams)
write_csv(games,"~/Google Drive/Fantasy/history.csv")
View(games)
#write_csv(games,"~/Google Drive/Fantasy/history.csv")
games <- games %>% select(-team1.elo,-team2.elo)
write_csv(games,"~/Google Drive/Fantasy/history.csv")
View(teams)
View(games)
games <- read_csv("~/Google Drive/Fantasy/history.csv")
View(games)
games$year[218:293] <- 2017
games$format[218:293] <- "Standard"
table(games$year)
write_csv(games,"~/Google Drive/Fantasy/history.csv")
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
View(games)
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
View(teams)
summary(lm(team.pts ~ team + year + week + format, data = teams))
summary(lm(team.pts ~ team + format, data = teams))
kimters <- teams %>% filter(team == "Jon" & opp == "Kim")
View(kimters)
View(teams)
summary(glm(result ~ team, data = teams, family = "binomial"))
teams$res <- ifelse(teams$result == "W",1,0)
summary(glm(res ~ team, data = teams, family = "binomial"))
m <- glm(res ~ team, data = teams, family = "binomial")
exp(m$coefficients)
games <- read_csv("~/Google Drive/Fantasy/history.csv")
View(games)
games$year[294:369] <- 2016
games$format[294:369] <- "Standard"
write_csv(games,"~/Google Drive/Fantasy/history.csv")
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
teams
summary(lm(team.pts ~ team + format, data = teams))
View(teams)
summary(lm(opp.pts ~ team + format, data = teams))
kimters <- teams %>% filter(team == "Jon" & opp == "Kim")
View(kimters)
summary(lm(opp.pts ~ team + format, data = filter(teams,year>2016)))
teams %>% group_by(team) %>% summarise(pa = mean(opp.pts))
teams %>% group_by(team) %>% summarise(pa = mean(opp.pts)) %>% arrange(pa)
summary(lm(team.pts ~ relevel(team, ref = "Jon") + format, data = filter(teams,year>2016)))
teams$team <- relevel(teams$team, ref = "Jon")
summary(lm(team.pts ~ team + format, data = filter(teams,year>2016)))
teams$team <- relevel(teams$team, ref = "Jon")
teams$team <- relevel(as.factor(teams$team), ref = "Jon")
summary(lm(team.pts ~ team + format, data = filter(teams,year>2016)))
teams$team <- relevel(as.factor(teams$team), ref = "Kim")
summary(lm(team.pts ~ team + format, data = filter(teams,year>2016)))
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
games$year[370:445] <- 2015
games$format[370:445] <- "Standard"
write_csv(games,"~/Google Drive/Fantasy/history.csv")
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
summary(lm(team.pts ~ team + format, data = teams))
teams$team <- relevel(as.factor(teams$team), ref = "Jon")
summary(lm(team.pts ~ team + format, data = teams))
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
games$n.teams <- "Ten"
View(games)
write_csv(games,"~/Google Drive/Fantasy/history.csv")
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
games$year[446:505] <- 2014
games$format[446:505] <- "Standard"
games$n.teams[446:505] <- "Eight"
write_csv(games,"~/Google Drive/Fantasy/history.csv")
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
View(games)
View(teams)
teams$team <- relevel(as.factor(teams$team), ref = "Jon")
summary(lm(team.pts ~ team + format + n.teams, data = teams))
teams$team <- relevel(as.factor(teams$team), ref = "Kim")
summary(lm(team.pts ~ team + format + n.teams, data = teams))
teams$team <- relevel(as.factor(teams$team), ref = "Marcos")
summary(lm(team.pts ~ team + format + n.teams, data = teams))
lg.history <- data.frame(team = rep(unique(team$teams), each = 7),year = rep(unique(team$year), each = 7))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), each = 7))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), each = 11))
View(lg.history)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11))
View(lg.history)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten")
summary(lm(team.pts ~ team:year + format + n.teams, data = teams))
summary(lm(team.pts ~ team + format + n.teams + team:year, data = teams))
summary(lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = teams))
summary(lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = filter(teams,team!="Tanisha"))
)
model <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = filter(teams,team!="Tanisha"))
lg.history$points <- predict(model, newdata = lg.history)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(model, newdata = lg.history)
View(lg.history)
model <- lm(team.pts ~ team + format + team:as.factor(year), data = filter(teams,team!="Tanisha"))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(model, newdata = lg.history)
View(lg.history)
model <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = filter(teams,team!="Tanisha"))
summary(model)
model <- lm(team.pts ~ team + format + n.teams  data = filter(teams,team!="Tanisha"))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
View(lg.history)
lg.history$points <- predict(model, newdata = lg.history)
View(lg.history)
model <- lm(team.pts ~ team + format + n.teams  ,data = filter(teams,team!="Tanisha"))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(model, newdata = lg.history)
View(lg.history)
model <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = filter(teams,team!="Tanisha"))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(model, newdata = lg.history)
model <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(model, newdata = lg.history)
View(lg.history)
lg.history %>% filter(team=="Kim") %>% select(team,year,points)
lg.history %>% filter(team=="Kim") %>% select(team,year,points) %>% arrange(desc(points)
)
lg.history %>% filter(team=="Jon") %>% select(team,year,points) %>% arrange(desc(points)
)
teams %>% group_by(team,year) %>% summarise(ppg = mean(team.pts))
teams %>% group_by(team,year) %>% summarise(ppg = mean(team.pts)) %>% arrange(desc(ppg))
kimters <- teams %>% filter(team == "Jon" & opp == "Kim")
View(kimters)
mean(kimters$margin)
teams$year.week <- teams$year*100+teams$week
p <- ggplot(teams,aes(year.week,elo, color = team)) + geom_line()
library(plotly)
ggplotly(p)
p <- ggplot(teams,aes(as.facotr(year.week),elo, color = team)) + geom_line()
ggplotly(p)
p <- ggplot(teams,aes(as.factor(year.week),elo, color = team)) + geom_line()
ggploty(p)
ggplotly(p)
weeks <- data.frame(year.week = unique(teams$year.week))
View(weeks)
weeks <- data.frame(year.week = unique(teams$year.week), week.no = 1:length(unique(teams$year.week)))
View(weeks)
teams <- teams %>% left_join(weeks, by = "year.week") %>% select(year.week)
p <- ggplot(teams,aes(week.no,elo, color = team)) + geom_line()
ggplotly(p)
View(teams)
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
teams$year.week <- teams$year*100+teams$week
weeks <- data.frame(year.week = unique(teams$year.week), week.no = 1:length(unique(teams$year.week)))
teams <- teams %>% left_join(weeks, by = "year.week") %>% select(-year.week)
p <- ggplot(teams,aes(week.no,elo, color = team)) + geom_line()
ggplotly(p)
m2 <- lm(team.pts ~ team + format + n.teams, data = teams)
summary(m2)
m2 <- lm(team.pts ~ team + format + n.teams + year, data = teams)
summary(m2)
m2 <- lm(team.pts ~ team + format + n.teams + team:year, data = teams)
summary(m2)
m2 <- lm(opp.pts ~ team + format + n.teams, data = teams)
m2 <- lm(opp.pts ~ team + format + n.teams, data = teams)
summary(m2)
# Fantasy
suppressWarnings(source("~/Google Drive/Fantasy/fantasy.R"))
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
# NFL Draft
source("~/Documents/draftorder.R")
sims
head(sims)
head(sim.wins)
sim.wins %>% filter(team=="NE") %>% mutate(adp = mean(draft))
sim.wins %>% filter(team=="NE") %>% group_by(team) %>% summarise(adp = mean(draft))
library(tidyverse)
library(elo)
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
teams$year.week <- teams$year*100+teams$week
weeks <- data.frame(year.week = unique(teams$year.week), week.no = 1:length(unique(teams$year.week)))
teams <- teams %>% left_join(weeks, by = "year.week") %>% select(-year.week)
kimters <- teams %>% filter(team == "Jon" & opp == "Kim")
# Fantasy
suppressWarnings(source("~/Google Drive/Fantasy/fantasy.R"))
source("~/Google Drive/Futbol/tercerafullsim.R")
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
knitr::opts_chunk$set(echo = TRUE)
d <- read_csv("~/Downloads/data.csv")
library(tidyverse)
library(sf)
library(tmap)
tmap_mode("view")
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(-STATEFP,-COUNTYFP)
d <- read_csv("~/Downloads/data.csv")
View(d)
View(d)
View(d)
View(Census_Tract)
View(d)
06059001101 == 6059001101
head(Census_Tract)
head(d)
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
head(Census_Tract)
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid")
Social_Progress_Index$geoid <- as.character(Social_Progress_Index$geoid)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid")
View(Social_Progress_Index)
View(Census_Tract)
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
View(Social_Progress_Index)
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid")
View(Social_Progress_Index)
View(d)
length(unique(d$geoid))
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid") %>% complete.cases()
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid") %>% complete.cases()
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid") %>% drop_na()
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid") %>% drop_na() %>% rename(Score = value)
tm <- tm_basemap("OpenStreetMap") +
tm_shape(Social_Progress_Index) + tm_fill("Score", alpha = .50)
library(tidyverse)
library(sf)
library(tmap)
tmap_mode("view")
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
d <- read_csv("~/Downloads/data.csv")
Social_Progress_Index <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
Social_Progress_Index <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid") %>% drop_na() %>% rename(Score = value)
tm <- tm_basemap("OpenStreetMap") +
tm_shape(Social_Progress_Index) + tm_fill("Score", alpha = .50)
tm
View(Social_Progress_Index)
View(Census_Tract)
tm <- tm_basemap("OpenStreetMap") +
tm_shape(Census_Tract)
tm
tm <- tm_basemap("OpenStreetMap") +
tm_shape(Census_Tract) + tm_fill("geoid", alpha = .50)
tm
class(Census_Tract)
class(Social_Progress_Index)
SPI_map <- Census_Tract %>% left_join(Social_Progress_Index, by = "geoid") %>% drop_na() %>% rename(Score = value)
library(tidyverse)
library(sf)
library(tmap)
tmap_mode("view")
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
t <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
SPI <- Census_Tract %>% left_join(t, by = "geoid") %>% drop_na() %>% rename(Score = value)
class(SPI)
class(Census_Tract)
Census_Tract <- Census_Tract %>% left_join(t, by = "geoid") %>% drop_na() %>% rename(Score = value)
class(Census_Tract)
View(Census_Tract)
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
t <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
SPI <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename(Score = value)
class(Census_Tract)
class(SPI)
View(SPI)
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
t <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
SPI <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename("Social Progress Index" = value)
SPI <- st_as_sf(SPI)
BHN <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename("Basic Human Needs" = value)
BHN <- st_as_sf(BHN)
library(tidyverse)
library(sf)
library(tmap)
tmap_mode("view")
Census_Tract <- read_sf("~/Downloads/cb_2018_06_tract_500k-1/cb_2018_06_tract_500k.shp") %>% filter(COUNTYFP == "059") %>% select(GEOID,geometry) %>% rename(geoid = GEOID)
Census_Tract$geoid <- as.numeric(Census_Tract$geoid)
d <- read_csv("~/Downloads/data.csv")
t <- d %>% filter(aspect == "Social Progress Index") %>% select(geoid,value)
SPI <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename("Social Progress Index" = value)
SPI <- st_as_sf(SPI)
BHN <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename("Basic Human Needs" = value)
BHN <- st_as_sf(BHN)
FW <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename("Foundations of Wellbeing" = value)
FW <- st_as_sf(FW)
OPP <- t %>% left_join(Census_Tract, by = "geoid") %>% drop_na() %>% rename("Opportunity" = value)
OPP <- st_as_sf(OPP)
tmaptools::palette_explorer()
tmaptools::palette_explorer()
install.packages("leaflet.extras")
# NFL Draft
source("~/Documents/draftorder.R")
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
# NFL Draft
source("~/Documents/draftorder.R")
# Fantasy
suppressWarnings(source("~/Google Drive/Fantasy/fantasy.R"))
# Fantasy
suppressWarnings(source("~/Google Drive/Fantasy/fantasy.R"))
# Fantasy
suppressWarnings(source("~/Google Drive/Fantasy/fantasy.R"))
View(semis)
library(tidyverse)
library(elo)
games <- read_csv("~/Google Drive/Fantasy/history.csv") %>% arrange(year,week)
model <- elo.run(score(team1.pts, team2.pts) ~ team1 + team2 + k(20*(log(abs(team1.pts - team2.pts) + 1))), data = games)
games$team1.elo <- model[[1]][,7]
games$team2.elo <- model[[1]][,8]
teams <- rbind(games %>% rename(team = team1) %>% rename(team.pts = team1.pts) %>% rename(opp = team2) %>% rename(opp.pts = team2.pts) %>% rename(elo = team1.elo) %>% rename(opp.elo = team2.elo), games %>% rename(team = team2) %>% rename(team.pts = team2.pts) %>% rename(opp = team1) %>% rename(opp.pts = team1.pts) %>% rename(elo = team2.elo) %>% rename(opp.elo = team1.elo))
teams$margin <- teams$team.pts - teams$opp.pts
teams$result <- ifelse(teams$margin>0,"W",
ifelse(teams$margin<0,"L","T"))
teams$year.week <- teams$year*100+teams$week
weeks <- data.frame(year.week = unique(teams$year.week), week.no = 1:length(unique(teams$year.week)))
teams <- teams %>% left_join(weeks, by = "year.week") %>% select(-year.week)
p <- ggplot(teams,aes(week.no,elo, color = team)) + geom_line()
ggplotly(p)
library(plotly)
ggplotly(p)
teams %>% filter(year == max(year)) %>% filter(week == max(week))
teams %>% filter(year == max(year)) %>% filter(week == max(week)) %>% select(team,elo)
teams %>% filter(year == max(year)) %>% filter(week == max(week)) %>% select(team,elo) %>% arrange(desc(elo))
m <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
m2 <- lm(team.pts ~ team + format + n.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
team.comp$points <- predict(m2, newdata = team.comp)
m2
team.comp
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + format + n.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", n.teams = "Ten")
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
View(lg.history)
lg.history %>% arrange(desc(points)) %>% select(team,year,points)
m <- lm(team.pts ~ team + format + n.teams + year + team:as.factor(year), data = teams)
summary(m)
lg.history %>% arrange(desc(points)) %>% select(team,year,points)
m <- lm(team.pts ~ team + format + n.teams + year + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
lg.history %>% arrange(desc(points)) %>% select(team,year,points)
m <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
lg.history %>% arrange(desc(points)) %>% select(team,year,points)
m <- lm(team.pts ~ team + format  + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
lg.history %>% arrange(desc(points)) %>% select(team,year,points)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
m <- lm(team.pts ~ team + format + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
m <- lm(team.pts ~ team + format + n.teams + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
View(teams)
teams$number.teams <- ifelse(teams$n.teams == "Ten",10,8)
m <- lm(team.pts ~ team + format + number.teams + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
m <- lm(team.pts ~ team + format + number.teams + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", number.teams = 10) %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
m <- lm(team.pts ~ team + format + team:as.factor(year), data = teams)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", number.teams = 10) %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
summary(m)
m <- lm(team.pts ~ team + format + team:as.factor(year), data = filter(teams,team != "Tanisha"))
summary(m)
m <- lm(team.pts ~ team + format + number.teams + team:as.factor(year), data = filter(teams,team != "Tanisha"))
summary(m)
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", number.teams = 10) %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
m <- lm(team.pts ~ team + format  + team:as.factor(year), data = filter(teams,team != "Tanisha"))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", number.teams = 10) %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
View(lg.history)
m2 <- lm(team.pts ~ team + format + n.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", n.teams = "Ten")
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + format + number.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", n.teams = "Ten")
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + format + number.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", number.teams = 10)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + year +format + number.teams, data = teams)
summary(m2)
m <- lm(team.pts ~ team + format + year + n.teams + team:as.factor(year), data = filter(teams,team != "Tanisha"))
m <- lm(team.pts ~ team + format + year + n.teams + team:as.factor(year), data = filter(teams,team != "Tanisha"))
lg.history <- data.frame(team = rep(unique(teams$team), each = 7),year = rep(unique(teams$year), teams = 11), format = "PPR", n.teams = "Ten") %>% filter(team!="Tanisha")
lg.history$points <- predict(m, newdata = lg.history)
head(lg.history %>% arrange(desc(points)) %>% select(team,year,points))
m2 <- lm(team.pts ~ team + year + format + number.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", number.teams = 10, year == 2019)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + year + format + number.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", number.teams = 10, year == 2020)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + year + format + number.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", number.teams = 10, year = 2020)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + year + format + number.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", number.teams = 10, year = 2019)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + as.factor(year) + format + number.teams, data = teams)
summary(m2)
m2 <- lm(team.pts ~ team + year + format + number.teams, data = teams)
summary(m2)
m2 <- lm(team.pts ~ team + year + format + n.teams, data = teams)
summary(m2)
m2 <- lm(team.pts ~ team + year + format + n.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", number.teams = 10, year = 2020)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
m2 <- lm(team.pts ~ team + year + format + n.teams, data = teams)
team.comp <- data.frame(team = unique(teams$team), format = "PPR", n.teams = "Ten", year = 2020)
team.comp$points <- predict(m2, newdata = team.comp)
team.comp %>% arrange(desc(points)) %>% select(team,points)
teams %>% filter(year == max(year)) %>% filter(week == max(week)) %>% select(team,elo) %>% arrange(desc(elo))
teams %>% filter(year == max(year)) %>% filter(week == max(week) | max(week)-1) %>% select(team,elo,week) %>% arrange(desc(elo))
teams %>% filter(year == max(year))
teams %>% filter(year == max(year)) %>% filter(week == max(week) | max(week)-1)
teams %>% filter(year == max(year)) %>% filter(week == max(week) | week ==  max(week)-1) %>% select(team,elo,week) %>% arrange(desc(elo))
teams %>% filter(year == max(year)) %>% filter(week == max(week)) %>% select(team,elo) %>% arrange(desc(elo))
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
