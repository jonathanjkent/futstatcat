colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
# Loop
all.projs <- NA
orig.results <- results
orig.schedule <- schedule
for (i in 12:max(results$week)){
# Select weeks
results.temp <- orig.results %>% subset(week < (i+1))
results.other <- orig.results %>% subset(week > (i))
results <- results.temp
results.other <- results.other %>% select(home, away, week)
schedule <- rbind(orig.schedule, results.other)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
proj$round <- i
all.projs <- rbind(all.projs, proj)
}
all.projs <- all.projs[complete.cases(all.projs), ]
write.csv(all.projs, "prog-prifem.csv", row.names = FALSE)
###### Primera
# Scrape data
url <- 'https://www.resultados-futbol.com/primera2020/grupo1/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.url') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create data frame
games <- data.frame(home1 = local_data, away1 = vist_data, score = result_data, date = dates_data)
home.names <- read.csv("clubnames.csv") %>% select(home1, home)
away.names <- read.csv("clubnames.csv") %>% select(away1, away)
games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:38, each = 10)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- results %>% separate(date, c("day", "month", "year"))
results$year <- as.numeric(results$year) + 2000
month.recode <- NA
month.recode$month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May")
month.recode <- as.data.frame(month.recode)
month.recode$month.num <- c(8,9,10,11,12,1,2,3,4,5)
month.recode <- month.recode %>% select(month, month.num)
results <- results %>% left_join(month.recode, by = "month")
results$date <- as.Date(with(results, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
results <- results %>% select(-day, -month, -year, -month.num)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
ratings <- as.data.frame(gm_res$parameters)
ratings <- rownames_to_column(ratings, "team")
ratings$off.rank <- rank(-ratings$attack, ties.method = "random")
ratings$def.rank <- rank(-ratings$defense, ties.method = "random")
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
## Calculate Predicated GD
goal.preds <- predict_expg(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# GF
pgf.home <- goal.preds %>% group_by(team1) %>%
summarize(gf = sum(expg1))
pgf.away <- goal.preds %>% group_by(team2) %>%
summarize(gf = sum(expg2))
colnames(pgf.home)[1] <- 'team'
colnames(pgf.away)[1] <- 'team'
gf.home <- results %>% group_by(home) %>%
summarize(gf = sum(home.score))
gf.away <- results %>% group_by(away) %>%
summarize(gf = sum(away.score))
colnames(gf.home)[1] <- 'team'
colnames(gf.away)[1] <- 'team'
gf <- rbind(pgf.home, pgf.away, gf.home, gf.away)
gf <- gf %>% group_by(team) %>%
summarize(gf = sum(gf))
# GA
pga.home <- goal.preds %>% group_by(team1) %>%
summarize(ga = sum(expg2))
pga.away <- goal.preds %>% group_by(team2) %>%
summarize(ga = sum(expg1))
colnames(pga.home)[1] <- 'team'
colnames(pga.away)[1] <- 'team'
ga.home <- results %>% group_by(home) %>%
summarize(ga = sum(away.score))
ga.away <- results %>% group_by(away) %>%
summarize(ga = sum(home.score))
colnames(ga.home)[1] <- 'team'
colnames(ga.away)[1] <- 'team'
ga <- rbind(pga.home, pga.away, ga.home, ga.away)
ga <- ga %>% group_by(team) %>%
summarize(ga = sum(ga))
# GD
gd <- gf %>% left_join(ga, by = "team")
gd$gd <- gd$gf - gd$ga + 6
gd <- gd %>% select(team, gd)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Simulation
all.sims <- simseason(predictions, table.all, i.sim)
## Combine Results Into Final Table
final <- ratings %>% select(team, off.rank, def.rank)
final <- final %>% left_join(gd, by = "team")
proj.points <- all.sims %>% group_by(team) %>% summarize(proj.points = mean(points))
proj.points$proj.points <- proj.points$proj.points+6
final <- final %>% left_join(proj.points, by = "team")
champ <- all.sims %>% filter(rank == 1) %>% group_by(team) %>% count
champ$champ.pct <- (champ$n/i.sim)
champ <- champ %>% select(-n)
final <- final %>% left_join(champ, by = "team")
playoff <- all.sims %>% filter(rank < 5) %>% group_by(team) %>% count
playoff$playoff.pct <- (playoff$n/i.sim)
playoff <- playoff %>% select(-n)
final <- final %>% left_join(playoff, by = "team")
drop <- all.sims %>% filter(rank > 17 ) %>% group_by(team) %>% count
drop$drop.pct <- (drop$n/i.sim)
drop <- drop %>% select(-n)
final <- final %>% left_join(drop, by = "team")
final[is.na(final)] <- 0
final <- final %>%
mutate(champ.pct = percent(champ.pct, 2)) %>%
mutate(drop.pct = percent(drop.pct, 2)) %>%
mutate(playoff.pct = percent(playoff.pct, 2))
final <- final %>% select(team, proj.points, gd, champ.pct, playoff.pct, drop.pct, off.rank, def.rank)
final.primera <- final[order(-final$proj.points),]
partits.primera <- predictions %>% mutate(p1 = percent(p1, 2)) %>%
mutate(pd = percent(pd, 2)) %>%
mutate(p2 = percent(p2, 2))
write.csv(final.primera, "final-primera.csv", row.names = FALSE)
write.csv(partits.primera, "games-primera.csv", row.names = FALSE)
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
# Loop
all.projs <- NA
orig.results <- results
orig.schedule <- schedule
for (i in 12:max(results$week)){
# Select weeks
results.temp <- orig.results %>% subset(week < (i+1))
results.other <- orig.results %>% subset(week > (i))
results <- results.temp
results.other <- results.other %>% select(home, away, week)
schedule <- rbind(orig.schedule, results.other)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
proj$round <- i
all.projs <- rbind(all.projs, proj)
}
all.projs <- all.projs[complete.cases(all.projs), ]
write.csv(all.projs, "prog-primera.csv", row.names = FALSE)
####### Segona A
# Scrape data
url <- 'https://www.resultados-futbol.com/segunda2020/grupo1/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.rstd') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create data frame
games <- data.frame(home1 = local_data, away1 = vist_data, score = result_data, date = dates_data)
games$score <- as.character.factor(games$score)
games$score <- str_sub(games$score, -11, -7)
home.names <- read.csv("clubnames.csv") %>% select(home1, home)
away.names <- read.csv("clubnames.csv") %>% select(away1, away)
games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:42, each = 11)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule3 <- subset(games, grepl("Apl", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- results %>% separate(date, c("day", "month", "year"))
results$year <- as.numeric(results$year) + 2000
month.recode <- NA
month.recode$month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May")
month.recode <- as.data.frame(month.recode)
month.recode$month.num <- c(8,9,10,11,12,1,2,3,4,5)
month.recode <- month.recode %>% select(month, month.num)
results <- results %>% left_join(month.recode, by = "month")
results$date <- as.Date(with(results, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
results <- results %>% select(-day, -month, -year, -month.num)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
ratings <- as.data.frame(gm_res$parameters)
ratings <- rownames_to_column(ratings, "team")
ratings$off.rank <- rank(-ratings$attack, ties.method = "random")
ratings$def.rank <- rank(-ratings$defense, ties.method = "random")
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
## Calculate Predicated GD
goal.preds <- predict_expg(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# GF
pgf.home <- goal.preds %>% group_by(team1) %>%
summarize(gf = sum(expg1))
pgf.away <- goal.preds %>% group_by(team2) %>%
summarize(gf = sum(expg2))
colnames(pgf.home)[1] <- 'team'
colnames(pgf.away)[1] <- 'team'
gf.home <- results %>% group_by(home) %>%
summarize(gf = sum(home.score))
gf.away <- results %>% group_by(away) %>%
summarize(gf = sum(away.score))
colnames(gf.home)[1] <- 'team'
colnames(gf.away)[1] <- 'team'
gf <- rbind(pgf.home, pgf.away, gf.home, gf.away)
gf <- gf %>% group_by(team) %>%
summarize(gf = sum(gf))
# GA
pga.home <- goal.preds %>% group_by(team1) %>%
summarize(ga = sum(expg2))
pga.away <- goal.preds %>% group_by(team2) %>%
summarize(ga = sum(expg1))
colnames(pga.home)[1] <- 'team'
colnames(pga.away)[1] <- 'team'
ga.home <- results %>% group_by(home) %>%
summarize(ga = sum(away.score))
ga.away <- results %>% group_by(away) %>%
summarize(ga = sum(home.score))
colnames(ga.home)[1] <- 'team'
colnames(ga.away)[1] <- 'team'
ga <- rbind(pga.home, pga.away, ga.home, ga.away)
ga <- ga %>% group_by(team) %>%
summarize(ga = sum(ga))
# GD
gd <- gf %>% left_join(ga, by = "team")
gd$gd <- gd$gf - gd$ga + 6
gd <- gd %>% select(team, gd)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Simulation
all.sims <- simseason(predictions, table.all, i.sim)
## Combine Results Into Final Table
final <- ratings %>% select(team, off.rank, def.rank)
final <- final %>% left_join(gd, by = "team")
proj.points <- all.sims %>% group_by(team) %>% summarize(proj.points = mean(points))
proj.points$proj.points <- proj.points$proj.points+6
final <- final %>% left_join(proj.points, by = "team")
champ <- all.sims %>% filter(rank < 3) %>% group_by(team) %>% count
champ$champ.pct <- (champ$n/i.sim)
champ <- champ %>% select(-n)
final <- final %>% left_join(champ, by = "team")
playoff <- all.sims %>% filter((rank > 2) & (rank < 7)) %>% group_by(team) %>% count
playoff$playoff.pct <- (playoff$n/i.sim)
playoff <- playoff %>% select(-n)
final <- final %>% left_join(playoff, by = "team")
drop <- all.sims %>% filter(rank > 18 ) %>% group_by(team) %>% count
drop$drop.pct <- (drop$n/i.sim)
drop <- drop %>% select(-n)
final <- final %>% left_join(drop, by = "team")
final[is.na(final)] <- 0
final <- final %>%
mutate(champ.pct = percent(champ.pct, 2)) %>%
mutate(drop.pct = percent(drop.pct, 2)) %>%
mutate(playoff.pct = percent(playoff.pct, 2))
final <- final %>% select(team, proj.points, gd, champ.pct, playoff.pct, drop.pct, off.rank, def.rank)
final.sega <- final[order(-final$proj.points),]
partits.sega <- predictions %>% mutate(p1 = percent(p1, 2)) %>%
mutate(pd = percent(pd, 2)) %>%
mutate(p2 = percent(p2, 2))
write.csv(final.sega, "final-sega.csv", row.names = FALSE)
write.csv(partits.sega, "games-sega.csv", row.names = FALSE)
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
# Loop
all.projs <- NA
orig.results <- results
orig.schedule <- schedule
for (i in 12:max(results$week)){
# Select weeks
results.temp <- orig.results %>% subset(week < (i+1))
results.other <- orig.results %>% subset(week > (i))
results <- results.temp
results.other <- results.other %>% select(home, away, week)
schedule <- rbind(orig.schedule, results.other)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
proj$round <- i
all.projs <- rbind(all.projs, proj)
}
all.projs <- all.projs[complete.cases(all.projs), ]
write.csv(all.projs, "prog-sega.csv", row.names = FALSE)
####### Render Site
library(blogdown)
library(rmarkdown)
setwd("~/Google Drive/Futbol/futstatcat")
render_site()
serve_site()
###### Created featured image
prog <- read.csv("~/Google Drive/Futbol/prog-2aBG3.csv")
prog$points <- round(prog$points, digits = 1)
colnames(prog)[1] <- 'Club'
colnames(prog)[2] <- 'Punts.Projectats'
colnames(prog)[3] <- 'Jornada'
library(plotly)
library(ggplot2)
library(htmlwidgets)
plot <- ggplot(prog,aes(Jornada, Punts.Projectats, color = Club)) + geom_line() +
labs(y = "Punts Projectats") +
ylim(65,85) +
theme_classic(base_size = 20)
plot2 <- ggplotly(plot)
plot2 <- config(plot2, displayModeBar = FALSE)
plot2
View(final.primcat1)
View(partits.2aBG3)
View(predictions)
