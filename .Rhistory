column_spec(1, bold = T, color = "#303030") %>%
row_spec(1, background = "#ffe9b3") %>%
row_spec(2, background = "#b3ffbe") %>%
row_spec(3, background = "#ccffd4") %>%
row_spec(4, background = "#e5ffe9") %>%
row_spec(18, background = "#ffe7e5") %>%
row_spec(19, background = "#ffcfcc") %>%
row_spec(20, background = "#ffb9b3") %>%
footnote(general = format(Sys.time(), "%d %b %Y, %X"), general_title = "Actualitzat:", footnote_as_chunk = T) %>%
save_kable(file = "final-3aG5.html", self_contained = T)
## Home Page Table
mini.3aG5 <- final.3aG5[1:5,1:4]
kable(mini.3aG5, digits = 1, align = "lccc", row.names = FALSE, col.names = c("Club", "Punts", "Campió", "Playoffs"))  %>%
kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>%
add_header_above(c("Tercera" = 1, "Projeccions" = 1, "Probabilitats" = 2), background = "white") %>%
column_spec(1, bold = T, color = "#303030") %>%
save_kable(file = "mini-3aG5.html", self_contained = T)
## Games Table
partits.3aG5 <- predictions %>% mutate(p1 = percent(p1, 2)) %>%
mutate(pd = percent(pd, 2)) %>%
mutate(p2 = percent(p2, 2))
kable(partits.3aG5, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "G", "E", "G", "Equip"))  %>%
kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>%
add_header_above(c("2019-20" = 1, "Local" = 2, " " = 1, "Visitant" = 2), background = "white") %>%
column_spec(2, bold = T, color = "#303030") %>%
column_spec(6, bold = T, color = "#303030") %>%
kable_styling(fixed_thead = T) %>%
footnote(general = format(Sys.time(), "%d %b %Y, %X"), general_title = "Actualitzat:", footnote_as_chunk = T) %>%
save_kable(file = "partits-3aG5.html", self_contained = T)
library(tidyverse)
library(rvest)
library(goalmodel)
setwd("~/Google Drive/Futbol")
# Scrape data from Marca
url <- 'https://www.marca.com/futbol/mas-futbol/segunda-b-grupo-iii/calendario.html'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.local')
local_data <- html_text(local_data)
vist_data <- html_nodes(webpage,'.visitante')
vist_data <- html_text(vist_data)
result_data <- html_nodes(webpage,'.resultado')
result_data <- html_text(result_data)
# Create data frame
games <- data.frame(home = local_data, away = vist_data, score = result_data)
schedule <- subset(games, !grepl("-", games$score))
schedule <- schedule %>% select(-score)
results <- subset(games, grepl("-", games$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Add week and date variables
week <- rep(1:38, each = 10)
results$week <- week[1:nrow(results)]
dates <- read.csv("gamedates.csv")
dates$date <- as.Date(with(dates, paste(year, month, day,sep="-")), "%Y-%m-%d")
dates <- dates %>% select(week, date)
results <- results %>% left_join(dates, by = "week")
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
ratings <- as.data.frame(gm_res$parameters)
ratings <- rownames_to_column(ratings, "team")
ratings$off.rank <- rank(-ratings$attack, ties.method = "random")
ratings$def.rank <- rank(-ratings$defense, ties.method = "random")
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
sked.week <- rep((1+max(results$week)):38, each = 10)
predictions$week <- sked.week
predictions <- predictions %>% select(week, team1, p1, pd, p2, team2)
## Calculate Predicated GD
goal.preds <- predict_expg(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# GF
pgf.home <- goal.preds %>% group_by(team1) %>%
summarize(gf = sum(expg1))
pgf.away <- goal.preds %>% group_by(team2) %>%
summarize(gf = sum(expg2))
colnames(pgf.home)[1] <- 'team'
colnames(pgf.away)[1] <- 'team'
gf.home <- results %>% group_by(home) %>%
summarize(gf = sum(home.score))
gf.away <- results %>% group_by(away) %>%
summarize(gf = sum(away.score))
colnames(gf.home)[1] <- 'team'
colnames(gf.away)[1] <- 'team'
gf <- rbind(pgf.home, pgf.away, gf.home, gf.away)
gf <- gf %>% group_by(team) %>%
summarize(gf = sum(gf))
# GA
pga.home <- goal.preds %>% group_by(team1) %>%
summarize(ga = sum(expg2))
pga.away <- goal.preds %>% group_by(team2) %>%
summarize(ga = sum(expg1))
colnames(pga.home)[1] <- 'team'
colnames(pga.away)[1] <- 'team'
ga.home <- results %>% group_by(home) %>%
summarize(ga = sum(away.score))
ga.away <- results %>% group_by(away) %>%
summarize(ga = sum(home.score))
colnames(ga.home)[1] <- 'team'
colnames(ga.away)[1] <- 'team'
ga <- rbind(pga.home, pga.away, ga.home, ga.away)
ga <- ga %>% group_by(team) %>%
summarize(ga = sum(ga))
# GD
gd <- gf %>% left_join(ga, by = "team")
gd$gd <- gd$gf - gd$ga
gd <- gd %>% select(team, gd)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Simulation
all.sims <- NA
i.sim <- 10000
for (i in 1:i.sim){
temp <- predictions
temp$sim <- runif((nrow(temp)),0,1)
temp <- mutate(temp, team1.points = ifelse(sim < p1, 3,
ifelse(sim > (1-p2), 0, 1)))
temp <- mutate(temp, team2.points = ifelse(team1.points == 0, 3,
ifelse(team1.points == 3, 0, 1)))
temp1 <- temp %>% select(team1, team1.points) %>% group_by(team1) %>% summarize(points = sum(team1.points))
temp2 <- temp %>% select(team2, team2.points) %>% group_by(team2) %>% summarize(points = sum(team2.points))
colnames(temp1)[1] <- 'team'
colnames(temp2)[1] <- 'team'
temp <- rbind(temp1, temp2)
temp <- temp %>% group_by(team) %>% summarize(points = sum(points))
temp <- rbind(temp, table.all)
temp <- temp %>% group_by(team) %>% summarize(points = sum(points))
temp$rank <- rank(-temp$points, ties.method = "random")
temp <- temp %>% left_join(gd, by = "team")
temp <- temp[order(-temp$gd),]
temp$rank <- rank(-temp$points, ties.method = "first")
all.sims <- rbind(all.sims, temp)
}
all.sims <- all.sims[complete.cases(all.sims), ]
## Combine Results Into Final Table
final <- ratings %>% select(team, off.rank, def.rank)
final <- final %>% left_join(gd, by = "team")
proj.points <- all.sims %>% group_by(team) %>% summarize(proj.points = mean(points))
proj.points$proj.points <- proj.points$proj.points+6
final <- final %>% left_join(proj.points, by = "team")
champ <- all.sims %>% filter(rank < 2) %>% group_by(team) %>% count
champ$champ.pct <- (champ$n/i.sim)
champ <- champ %>% select(-n)
final <- final %>% left_join(champ, by = "team")
playoff <- all.sims %>% filter(rank < 5) %>% group_by(team) %>% count
playoff$playoff.pct <- (playoff$n/i.sim)
playoff <- playoff %>% select(-n)
final <- final %>% left_join(playoff, by = "team")
drop <- all.sims %>% filter(rank > 17 ) %>% group_by(team) %>% count
drop$drop.pct <- (drop$n/i.sim)
drop <- drop %>% select(-n)
final <- final %>% left_join(drop, by = "team")
final[is.na(final)] <- 0
final <- final %>%
mutate(champ.pct = percent(champ.pct, suffix = "%")) %>%
mutate(drop.pct = percent(drop.pct, suffix = "%")) %>%
mutate(playoff.pct = percent(playoff.pct, suffix = "%"))
final <- final %>% select(team, proj.points, gd, champ.pct, playoff.pct, drop.pct, off.rank, def.rank)
final.2aBG3 <- final[order(-final$proj.points),]
## HTML Table
library(knitr)
library(kableExtra)
kable(final.2aBG3, digits = 1, align = "lccccccc", row.names = FALSE, col.names = c("Club", "Punts", "GD", "Campió", "Playoffs", "Descens", "Atacar", "Defensar"))  %>%
kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>%
add_header_above(c("Tercera" = 1, "Projeccions" = 2, "Probabilitats" = 3, "Rànquings" = 2), background = "white") %>%
column_spec(1, bold = T, color = "#303030") %>%
row_spec(1, background = "#ffe9b3") %>%
row_spec(2, background = "#b3ffbe") %>%
row_spec(3, background = "#ccffd4") %>%
row_spec(4, background = "#e5ffe9") %>%
row_spec(18, background = "#ffe7e5") %>%
row_spec(19, background = "#ffcfcc") %>%
row_spec(20, background = "#ffb9b3") %>%
footnote(general = format(Sys.time(), "%d %b %Y, %X"), general_title = "Actualitzat:", footnote_as_chunk = T) %>%
save_kable(file = "final-2aBG3.html", self_contained = T)
## Home Page Table
mini.2aBG3 <- final.2aBG3[1:5,1:4]
kable(mini.2aBG3, digits = 1, align = "lccc", row.names = FALSE, col.names = c("Club", "Punts", "Campió", "Playoffs"))  %>%
kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>%
add_header_above(c("Segona B" = 1, "Projeccions" = 1, "Probabilitats" = 2), background = "white") %>%
column_spec(1, bold = T, color = "#303030") %>%
save_kable(file = "mini-2aBG3.html", self_contained = T)
## Games Table
partits.2aBG3 <- predictions %>% mutate(p1 = percent(p1, 2)) %>%
mutate(pd = percent(pd, 2)) %>%
mutate(p2 = percent(p2, 2))
kable(partits.2aBG3, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "G", "E", "G", "Equip"))  %>%
kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>%
add_header_above(c("2019-20" = 1, "Local" = 2, " " = 1, "Visitant" = 2), background = "white") %>%
column_spec(2, bold = T, color = "#303030") %>%
column_spec(6, bold = T, color = "#303030") %>%
kable_styling(fixed_thead = T) %>%
footnote(general = format(Sys.time(), "%d %b %Y, %X"), general_title = "Actualitzat:", footnote_as_chunk = T) %>%
save_kable(file = "partits-2aBG3.html", self_contained = T)
####### Render Site
library(blogdown)
library(rmarkdown)
setwd("~/Google Drive/Futbol/futstatcat")
render_site()
serve_site()
library(htmlwidgets)
prog.3aG5 <- read.csv("~/Google Drive/Futbol/prog-3aG5.csv")
View(prog.3aG5)
library(tidyverse)
library(rvest)
library(goalmodel)
library(scales)
setwd("~/Google Drive/Futbol")
####### Tercera Grup 5
# Scrape data
url <- 'https://www.resultados-futbol.com/tercera2020/grupo5/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1')
local_data <- html_text(local_data)
vist_data <- html_nodes(webpage,'.equipo2')
vist_data <- html_text(vist_data)
result_data <- html_nodes(webpage,'.url')
result_data <- html_text(result_data)
dates_data <- html_nodes(webpage,'.fecha')
dates_data <- html_text(dates_data)
# Create data frame
games <- data.frame(home = local_data, away = vist_data, score = result_data, date = dates_data)
games <- subset(games, !grepl("Reus", games$home))
games <- subset(games, !grepl("Reus", games$away))
games$week <- rep(1:38, each = 9)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- results %>% separate(date, c("day", "month", "year"))
results$year <- as.numeric(results$year) + 2000
month.recode <- NA
month.recode$month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May")
month.recode <- as.data.frame(month.recode)
month.recode$month.num <- c(8,9,10,11,12,1,2,3,4,5)
month.recode <- month.recode %>% select(month, month.num)
results <- results %>% left_join(month.recode, by = "month")
results$date <- as.Date(with(results, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
results <- results %>% select(-day, -month, -year, -month.num)
# Number weeks so far
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
# Loop
all.projs <- NA
orig.results <- results
orig.schedule <- schedule
for (i in 12:max(results$week)){
# Select weeks
results.temp <- orig.results %>% subset(week < i)
results.other <- orig.results %>% subset(week > (i-1))
results <- results.temp
results.other <- results.other %>% select(home, away, week)
schedule <- rbind(orig.schedule, results.other)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
proj$round <- i
all.projs <- rbind(all.projs, proj)
}
all.projs <- all.projs[complete.cases(all.projs), ]
write.csv(all.projs, "prog-3aG5.csv", row.names = FALSE)
library(tidyverse)
library(rvest)
library(goalmodel)
library(scales)
setwd("~/Google Drive/Futbol")
####### Tercera Grup 5
# Scrape data
url <- 'https://www.resultados-futbol.com/tercera2020/grupo5/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1')
local_data <- html_text(local_data)
vist_data <- html_nodes(webpage,'.equipo2')
vist_data <- html_text(vist_data)
result_data <- html_nodes(webpage,'.url')
result_data <- html_text(result_data)
dates_data <- html_nodes(webpage,'.fecha')
dates_data <- html_text(dates_data)
# Create data frame
games <- data.frame(home = local_data, away = vist_data, score = result_data, date = dates_data)
games <- subset(games, !grepl("Reus", games$home))
games <- subset(games, !grepl("Reus", games$away))
games$week <- rep(1:38, each = 9)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- results %>% separate(date, c("day", "month", "year"))
results$year <- as.numeric(results$year) + 2000
month.recode <- NA
month.recode$month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May")
month.recode <- as.data.frame(month.recode)
month.recode$month.num <- c(8,9,10,11,12,1,2,3,4,5)
month.recode <- month.recode %>% select(month, month.num)
results <- results %>% left_join(month.recode, by = "month")
results$date <- as.Date(with(results, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
results <- results %>% select(-day, -month, -year, -month.num)
# Number weeks so far
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
# Loop
all.projs <- NA
orig.results <- results
orig.schedule <- schedule
for (i in 12:max(results$week)){
# Select weeks
results.temp <- orig.results %>% subset(week < (i+1))
results.other <- orig.results %>% subset(week > (i))
results <- results.temp
results.other <- results.other %>% select(home, away, week)
schedule <- rbind(orig.schedule, results.other)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=0.002)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, dc=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=schedule$home, team2=schedule$away, return_df = TRUE)
# Add week back
games$key <- paste(games$home, games$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(games, by = "key") %>% select(week, team1, p1, pd, p2, team2)
# Current Table
table <- results
table <- mutate(table, home.points = ifelse(home.score > away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table <- mutate(table, away.points = ifelse(home.score < away.score, 3,
ifelse(home.score == away.score, 1, 0)))
table.home <- table %>% group_by(home) %>%
summarize(points = sum(home.points))
table.away <- table %>% group_by(away) %>%
summarize(points = sum(away.points))
colnames(table.home)[1] <- 'team'
colnames(table.away)[1] <- 'team'
table.all <- rbind(table.home, table.away)
table.all <- table.all %>% group_by(team) %>%
summarize(points = sum(points))
# Predicted Points
predictions$home.points <- (predictions$p1 * 3) + predictions$pd
predictions$away.points <- (predictions$p2 * 3) + predictions$pd
pred.home <- predictions %>% group_by(team1) %>%
summarize(points = sum(home.points))
pred.away <- predictions %>% group_by(team2) %>%
summarize(points = sum(away.points))
colnames(pred.home)[1] <- 'team'
colnames(pred.away)[1] <- 'team'
pred.all <- rbind(pred.home, pred.away)
pred.all <- pred.all %>% group_by(team) %>%
summarize(points = sum(points))
# Full Projection
proj <- rbind(pred.all, table.all)
proj <- proj %>% group_by(team) %>%
summarize(points = sum(points))
proj$points <- proj$points + 6
proj$round <- i
all.projs <- rbind(all.projs, proj)
}
all.projs <- all.projs[complete.cases(all.projs), ]
write.csv(all.projs, "prog-3aG5.csv", row.names = FALSE)
View(orig.results)
####### Render Site
library(blogdown)
library(rmarkdown)
setwd("~/Google Drive/Futbol/futstatcat")
render_site()
serve_site()
