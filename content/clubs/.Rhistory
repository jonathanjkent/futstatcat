games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:34, each = 8)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(-schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- daterecode(results)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=xi.set)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, rs=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=results$home, team2=results$away, return_df = TRUE)
# Add scores back, code result
results$key <- paste(results$home, results$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(results, by = "key") %>% select(-key, -home, -away, -date)
predictions <- mutate(predictions, t1win = ifelse(home.score > away.score, 1, 0))
predictions <- mutate(predictions, tie = ifelse(home.score == away.score, 1, 0))
predictions <- predictions %>% select(-p2, -home.score, -away.score)
preds.all <- rbind(preds.all, predictions)
####### Primera Catalana, Grup II
# Scrape data
url <- 'https://www.resultados-futbol.com/primera_catalana2020/grupo2/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.url') %>% html_text(result_data)
dates_data <- html_nodes(webpage,'.fecha') %>% html_text(dates_data)
# Create data frame
games <- data.frame(home1 = local_data, away1 = vist_data, score = result_data, date = dates_data)
home.names <- read.csv("clubnames.csv") %>% select(home1, home)
away.names <- read.csv("clubnames.csv") %>% select(away1, away)
games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:34, each = 9)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(-schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- daterecode(results)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=xi.set)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, rs=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=results$home, team2=results$away, return_df = TRUE)
# Add scores back, code result
results$key <- paste(results$home, results$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(results, by = "key") %>% select(-key, -home, -away, -date)
predictions <- mutate(predictions, t1win = ifelse(home.score > away.score, 1, 0))
predictions <- mutate(predictions, tie = ifelse(home.score == away.score, 1, 0))
predictions <- predictions %>% select(-p2, -home.score, -away.score)
preds.all <- rbind(preds.all, predictions)
####### Lliga Femenina
# Scrape data
url <- 'https://www.resultados-futbol.com/primera_division_femenina2020/grupo1/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.url') %>% html_text(result_data)
dates_data <- html_nodes(webpage,'.fecha') %>% html_text(dates_data)
# Create data frame
games <- data.frame(home1 = local_data, away1 = vist_data, score = result_data, date = dates_data)
home.names <- read.csv("clubnames.csv") %>% select(home1, home)
away.names <- read.csv("clubnames.csv") %>% select(away1, away)
games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:30, each = 8)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- daterecode(results)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=xi.set)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, rs=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=results$home, team2=results$away, return_df = TRUE)
# Add scores back, code result
results$key <- paste(results$home, results$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(results, by = "key") %>% select(-key, -home, -away, -date)
predictions <- mutate(predictions, t1win = ifelse(home.score > away.score, 1, 0))
predictions <- mutate(predictions, tie = ifelse(home.score == away.score, 1, 0))
predictions <- predictions %>% select(-p2, -home.score, -away.score)
preds.all <- rbind(preds.all, predictions)
###### Primera
# Scrape data
url <- 'https://www.resultados-futbol.com/primera2020/grupo1/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.url') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create data frame
games <- data.frame(home1 = local_data, away1 = vist_data, score = result_data, date = dates_data)
home.names <- read.csv("clubnames.csv") %>% select(home1, home)
away.names <- read.csv("clubnames.csv") %>% select(away1, away)
games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:38, each = 10)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- daterecode(results)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=xi.set)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, rs=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=results$home, team2=results$away, return_df = TRUE)
# Add scores back, code result
results$key <- paste(results$home, results$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(results, by = "key") %>% select(-key, -home, -away, -date)
predictions <- mutate(predictions, t1win = ifelse(home.score > away.score, 1, 0))
predictions <- mutate(predictions, tie = ifelse(home.score == away.score, 1, 0))
predictions <- predictions %>% select(-p2, -home.score, -away.score)
preds.all <- rbind(preds.all, predictions)
####### Segona A
# Scrape data
url <- 'https://www.resultados-futbol.com/segunda2020/grupo1/calendario'
webpage <- read_html(url)
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.rstd') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create data frame
games <- data.frame(home1 = local_data, away1 = vist_data, score = result_data, date = dates_data)
games$score <- as.character.factor(games$score)
games$score <- str_sub(games$score, -11, -7)
home.names <- read.csv("clubnames.csv") %>% select(home1, home)
away.names <- read.csv("clubnames.csv") %>% select(away1, away)
games <- games %>% left_join(home.names, by = "home1") %>% left_join(away.names, by = "away1") %>% select(home, away, score, date)
games$week <- rep(1:42, each = 11)
schedule1 <- subset(games, grepl("x", games$score))
schedule2 <- subset(games, grepl(":", games$score))
schedule3 <- subset(games, grepl("Apl", games$score))
schedule <- rbind(schedule2, schedule1)
schedule <- schedule %>% select(-score, -date)
schedule <- schedule[order(schedule$week),]
results <- subset(games, grepl("-", games$score))
results <- subset(results, !grepl("x", results$score))
results <- results %>% separate(score, c("home.score", "away.score"))
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Create date variable
results <- daterecode(results)
# Dixon-Coles Ratings Model
weights <- weights_dc(results$date, xi=xi.set)
gm_res <- goalmodel(goals1 = results$home.score, goals2 = results$away.score,
team1 = results$home, team2=results$away, weights = weights, rs=TRUE)
# Dixon-Coles Game-by-Game Predictions
predictions <- predict_result(gm_res, team1=results$home, team2=results$away, return_df = TRUE)
# Add scores back, code result
results$key <- paste(results$home, results$away, sep="")
predictions$key <- paste(predictions$team1, predictions$team2, sep="")
predictions <- predictions %>% left_join(results, by = "key") %>% select(-key, -home, -away, -date)
predictions <- mutate(predictions, t1win = ifelse(home.score > away.score, 1, 0))
predictions <- mutate(predictions, tie = ifelse(home.score == away.score, 1, 0))
predictions <- predictions %>% select(-p2, -home.score, -away.score)
preds.all <- rbind(preds.all, predictions)
############################
######### Analysis #########
############################
#wins
slice.05w <- preds.all %>% subset((p1 > 0) & (p1 < .10))
m05w <- mean(slice.05w$t1win)
c05w <- nrow(slice.05w)
slice.10w <- preds.all %>% subset((p1 > .05) & (p1 < .15))
m10w <- mean(slice.10w$t1win)
c10w <- nrow(slice.10w)
slice.15w <- preds.all %>% subset((p1 > .10) & (p1 < .20))
m15w <- mean(slice.15w$t1win)
c15w <- nrow(slice.15w)
slice.20w <- preds.all %>% subset((p1 > .15) & (p1 < .25))
m20w <- mean(slice.20w$t1win)
c20w <- nrow(slice.20w)
slice.25w <- preds.all %>% subset((p1 > .20) & (p1 < .30))
m25w <- mean(slice.25w$t1win)
c25w <- nrow(slice.25w)
slice.30w <- preds.all %>% subset((p1 > .25) & (p1 < .35))
m30w <- mean(slice.30w$t1win)
c30w <- nrow(slice.30w)
slice.35w <- preds.all %>% subset((p1 > .30) & (p1 < .40))
m35w <- mean(slice.35w$t1win)
c35w <- nrow(slice.35w)
slice.40w <- preds.all %>% subset((p1 > .35) & (p1 < .45))
m40w <- mean(slice.40w$t1win)
c40w <- nrow(slice.40w)
slice.45w <- preds.all %>% subset((p1 > .40) & (p1 < .50))
m45w <- mean(slice.45w$t1win)
c45w <- nrow(slice.45w)
slice.50w <- preds.all %>% subset((p1 > .45) & (p1 < .55))
m50w <- mean(slice.50w$t1win)
c50w <- nrow(slice.50w)
slice.55w <- preds.all %>% subset((p1 > .50) & (p1 < .60))
m55w <- mean(slice.55w$t1win)
c55w <- nrow(slice.55w)
slice.60w <- preds.all %>% subset((p1 > .55) & (p1 < .65))
m60w <- mean(slice.60w$t1win)
c60w <- nrow(slice.60w)
slice.65w <- preds.all %>% subset((p1 > .60) & (p1 < .70))
m65w <- mean(slice.65w$t1win)
c65w <- nrow(slice.65w)
slice.70w <- preds.all %>% subset((p1 > .65) & (p1 < .75))
m70w <- mean(slice.70w$t1win)
c70w <- nrow(slice.70w)
slice.75w <- preds.all %>% subset((p1 > .70) & (p1 < .80))
m75w <- mean(slice.75w$t1win)
c75w <- nrow(slice.75w)
slice.80w <- preds.all %>% subset((p1 > .75) & (p1 < .85))
m80w <- mean(slice.80w$t1win)
c80w <- nrow(slice.80w)
slice.85w <- preds.all %>% subset((p1 > .80) & (p1 < .90))
m85w <- mean(slice.85w$t1win)
c85w <- nrow(slice.85w)
slice.90w <- preds.all %>% subset((p1 > .85) & (p1 < .95))
m90w <- mean(slice.90w$t1win)
c90w <- nrow(slice.90w)
slice.95w <- preds.all %>% subset((p1 > .90) & (p1 < 1))
m95w <- mean(slice.95w$t1win)
c95w <- nrow(slice.95w)
#ties
slice.05t <- preds.all %>% subset((pd > 0) & (pd < .10))
m05t <- mean(slice.05w$tie)
c05t <- nrow(slice.05w)
slice.10t <- preds.all %>% subset((pd > .05) & (pd < .15))
m10t <- mean(slice.10w$tie)
c10t <- nrow(slice.10w)
slice.15t <- preds.all %>% subset((pd > .10) & (pd < .20))
m15t <- mean(slice.15w$tie)
c15t <- nrow(slice.15w)
slice.20t <- preds.all %>% subset((pd > .15) & (pd < .25))
m20t <- mean(slice.20w$tie)
c20t <- nrow(slice.20w)
slice.25t <- preds.all %>% subset((pd > .20) & (pd < .30))
m25t <- mean(slice.25w$tie)
c25t <- nrow(slice.25w)
slice.30t <- preds.all %>% subset((pd > .25) & (pd < .35))
m30t <- mean(slice.30w$tie)
c30t <- nrow(slice.30w)
slice.35t <- preds.all %>% subset((pd > .30) & (pd < .40))
m35t <- mean(slice.35w$tie)
c35t <- nrow(slice.35w)
slice.40t <- preds.all %>% subset((pd > .35) & (pd < .45))
m40t <- mean(slice.40w$tie)
c40t <- nrow(slice.40w)
mw <- c(m05w,	m10w,	m15w,	m20w,	m25w,	m30w,	m35w,	m40w,	m45w,	m50w,	m55w,	m60w,	m65w,	m70w,	m75w,	m80w,	m85w,	m90w,	m95w, m05t,	m10t,	m15t,	m20t,	m25t,	m30t,	m35t,	m40t)
cw <- c(c05w,	c10w,	c15w,	c20w,	c25w,	c30w,	c35w,	c40w,	c45w,	c50w,	c55w,	c60w,	c65w,	c70w,	c75w,	c80w,	c85w,	c90w,	c95w, c05t,	c10t,	c15t,	c20t,	c25t,	c30t,	c35t,	c40t)
exp <- c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 5, 10, 15, 20, 25, 30, 35, 40)
restype <- c(1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1, 0, 0,	0,	0,	0,	0,	0,	0)
tests <- as.data.frame(cbind(mw,cw,exp,restype))
tests$exp <- tests$exp/100
tests$diff <- tests$mw - tests$exp
tests$absdiff <- abs(tests$diff)
tests$weidiff <- tests$cw*tests$absdiff
xi.test <- sum(tests$weidiff, na.rm = T)/sum(tests$cw, na.rm = T)
new.test <- as.data.frame(cbind(xi.set, xi.test))
xi.tests <- as.data.frame(rbind(xi.tests, new.test))
}
xi.tests <- xi.tests %>% subset(xi.tests$xi.test < 90)
write.csv(xi.tests, "xitests-9mar20rs.csv")
# Plot
library(ggplot2)
ggplot() + geom_smooth(data=xi.tests,aes(x=xi.set, y=xi.test))
library(blogdown)
library(rmarkdown)
setwd("~/Google Drive/Futbol/futstatcat")
#render_site()
serve_site()
library(tidyverse)
setwd("~/Google Drive/Futbol/futstatcat/content/clubs")
teamlist <- read_csv("~/Google Drive/Futbol/teamlist.csv")
for (i in 1:nrow(teamlist)){
teamname <- teamlist[i,1]
lgcode <- teamlist[i,2]
leaguename <- teamlist[i,3]
level2 <- teamlist[i,4]
level2value <- teamlist[i,5]
level3 <- teamlist[i,6]
adjustment <- teamlist[i,7]
a1 <- '---'
a2 <- 'date: "2020-04-01"'
a3 <- paste0('title: "',teamname,'"')
a4 <- paste0('subtitle: "',leaguename,'"')
aa4 <- paste0('summary: "',leaguename,'"')
a5 <- '---'
a6 <- '## Evolució dels punts projectats'
a7 <- '```{r fig.width=8, fig.height=5, echo=F,warning=FALSE,message=FALSE}'
a8 <- 'library(tidyverse)'
a9 <- 'library(ggplot2)'
a10 <- paste0('league <- "',lgcode,'"')
a11 <- paste0('teamname <- "',teamname,'"')
a12 <- paste0('level2 <- ',level2)
a13 <- paste0('level3 <- ',level3)
a14 <- paste0('level2value <- "',level2value,'"')
a15 <- paste0('adjustment <- ',adjustment)
a16 <- 'table <- read.csv(paste0("~/Google Drive/Futbol/final-",league,".csv"))'
a17 <- 'prog <- read.csv(paste0("~/Google Drive/Futbol/prog-",league,".csv"))'
a18 <- 'level1points <- (table$proj.points[1]+table$proj.points[2])/2'
a19 <- 'level2points <- (table$proj.points[level2]+table$proj.points[level2+1])/2'
a20 <- 'level3points <- (table$proj.points[level3]+table$proj.points[level3+1])/2'
a21 <- 'prog <- prog %>% subset(team == teamname)'
a22 <- 'prog$points <- prog$points + adjustment'
a23 <- 'level1df <- NA'
a24 <- 'level1df <- data.frame(level1df, team = rep("Campió", each = nrow(prog)))'
a25 <- 'level1df <- data.frame(level1df, points = rep(level1points, each = nrow(prog)))'
a26 <- 'level1df <- data.frame(level1df, round = rep(min(prog$round):max(prog$round), each = 1))'
a27 <- 'level1df <- level1df %>% select(-level1df)'
a28 <- 'level2df <- NA'
a29 <- 'level2df <- data.frame(level2df, team = rep(level2value, each = nrow(prog)))'
a30 <- 'level2df <- data.frame(level2df, points = rep(level2points, each = nrow(prog)))'
a31 <- 'level2df <- data.frame(level2df, round = rep(min(prog$round):max(prog$round), each = 1))'
a32 <- 'level2df <- level2df %>% select(-level2df)'
a33 <- 'level3df <- NA'
a34 <- 'level3df <- data.frame(level3df, team = rep("Descens", each = nrow(prog)))'
a35 <- 'level3df <- data.frame(level3df, points = rep(level3points, each = nrow(prog)))'
a36 <- 'level3df <- data.frame(level3df, round = rep(min(prog$round):max(prog$round), each = 1))'
a37 <- 'level3df <- level3df %>% select(-level3df)'
a38 <- 'prog <- rbind(prog, level1df)'
a39 <- 'prog <- rbind(prog, level2df)'
a40 <- 'prog <- rbind(prog, level3df)'
a41 <- 'p <- ggplot(data=prog) + geom_line(aes(round,points, color = team), size = 2)'
a42 <- 'p + theme_minimal() + labs(color = "", x = "", y = "")'
a43 <- '```'
a44 <- ' '
a45 <- '## Pròxims partits'
a46 <- '```{r echo=F,warning=FALSE,message=FALSE}'
a47 <- 'library(kableExtra)'
a48 <- 'games <- read.csv(paste0("~/Google Drive/Futbol/games-",league,".csv"))'
a49 <- 'games <- games %>% subset(team1 == teamname | team2 == teamname)'
a50 <- 'kable(games, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "Guanyar", "Empatar", "Guanyar", "Equip")) %>% kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>% add_header_above(c("2019-20" = 1, "Local" = 2, " " = 1, "Visitant" = 2)) %>% column_spec(2, bold = T, color = "#303030") %>% column_spec(6, bold = T, color = "#303030")'
a51 <- '```'
file <- iconv(teamname,to="ASCII//TRANSLIT")
file <- gsub("[[:space:]]", "", file)
file <- gsub("[[:punct:]]", "", file)
file <- paste0(gsub("'", "", file),lgcode, ".rmd")
writeLines(c(a1,a2,a3,a4,aa4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51), file)
}
library(tidyverse)
setwd("~/Google Drive/Futbol/futstatcat/content/clubs")
teamlist <- read_csv("~/Google Drive/Futbol/teamlist.csv")
for (i in 1:nrow(teamlist)){
teamname <- teamlist[i,1]
lgcode <- teamlist[i,2]
leaguename <- teamlist[i,3]
level2 <- teamlist[i,4]
level2value <- teamlist[i,5]
level3 <- teamlist[i,6]
adjustment <- teamlist[i,7]
fullname <- teamlist[i,8]
a1 <- '---'
a2 <- 'date: "2020-04-01"'
a3 <- paste0('title: "',fullname,'"')
a4 <- paste0('subtitle: "',leaguename,'"')
aa4 <- paste0('summary: "',leaguename,'"')
a5 <- '---'
a6 <- '## Evolució dels punts projectats'
a7 <- '```{r fig.width=8, fig.height=5, echo=F,warning=FALSE,message=FALSE}'
a8 <- 'library(tidyverse)'
a9 <- 'library(ggplot2)'
a10 <- paste0('league <- "',lgcode,'"')
a11 <- paste0('teamname <- "',teamname,'"')
a12 <- paste0('level2 <- ',level2)
a13 <- paste0('level3 <- ',level3)
a14 <- paste0('level2value <- "',level2value,'"')
a15 <- paste0('adjustment <- ',adjustment)
a16 <- 'table <- read.csv(paste0("~/Google Drive/Futbol/final-",league,".csv"))'
a17 <- 'prog <- read.csv(paste0("~/Google Drive/Futbol/prog-",league,".csv"))'
a18 <- 'level1points <- (table$proj.points[1]+table$proj.points[2])/2'
a19 <- 'level2points <- (table$proj.points[level2]+table$proj.points[level2+1])/2'
a20 <- 'level3points <- (table$proj.points[level3]+table$proj.points[level3+1])/2'
a21 <- 'prog <- prog %>% subset(team == teamname)'
a22 <- 'prog$points <- prog$points + adjustment'
a23 <- 'level1df <- NA'
a24 <- 'level1df <- data.frame(level1df, team = rep("Campió", each = nrow(prog)))'
a25 <- 'level1df <- data.frame(level1df, points = rep(level1points, each = nrow(prog)))'
a26 <- 'level1df <- data.frame(level1df, round = rep(min(prog$round):max(prog$round), each = 1))'
a27 <- 'level1df <- level1df %>% select(-level1df)'
a28 <- 'level2df <- NA'
a29 <- 'level2df <- data.frame(level2df, team = rep(level2value, each = nrow(prog)))'
a30 <- 'level2df <- data.frame(level2df, points = rep(level2points, each = nrow(prog)))'
a31 <- 'level2df <- data.frame(level2df, round = rep(min(prog$round):max(prog$round), each = 1))'
a32 <- 'level2df <- level2df %>% select(-level2df)'
a33 <- 'level3df <- NA'
a34 <- 'level3df <- data.frame(level3df, team = rep("Descens", each = nrow(prog)))'
a35 <- 'level3df <- data.frame(level3df, points = rep(level3points, each = nrow(prog)))'
a36 <- 'level3df <- data.frame(level3df, round = rep(min(prog$round):max(prog$round), each = 1))'
a37 <- 'level3df <- level3df %>% select(-level3df)'
a38 <- 'prog <- rbind(prog, level1df)'
a39 <- 'prog <- rbind(prog, level2df)'
a40 <- 'prog <- rbind(prog, level3df)'
a41 <- 'p <- ggplot(data=prog) + geom_line(aes(round,points, color = team), size = 2)'
a42 <- 'p + theme_minimal() + labs(color = "", x = "", y = "")'
a43 <- '```'
a44 <- ' '
a45 <- '## Pròxims partits'
a46 <- '```{r echo=F,warning=FALSE,message=FALSE}'
a47 <- 'library(kableExtra)'
a48 <- 'games <- read.csv(paste0("~/Google Drive/Futbol/games-",league,".csv"))'
a49 <- 'games <- games %>% subset(team1 == teamname | team2 == teamname)'
a50 <- 'kable(games, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "Guanyar", "Empatar", "Guanyar", "Equip")) %>% kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>% add_header_above(c("2019-20" = 1, "Local" = 2, " " = 1, "Visitant" = 2)) %>% column_spec(2, bold = T, color = "#303030") %>% column_spec(6, bold = T, color = "#303030")'
a51 <- '```'
file <- iconv(teamname,to="ASCII//TRANSLIT")
file <- gsub("[[:space:]]", "", file)
file <- gsub("[[:punct:]]", "", file)
file <- paste0(gsub("'", "", file),lgcode, ".rmd")
writeLines(c(a1,a2,a3,a4,aa4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51), file)
}
table.3aG5 <- read.csv("~/Google Drive/Futbol/final-3aG5.csv")
table.3aG5$linkteam <- iconv(table.3aG5$team,to="ASCII//TRANSLIT")
View(table.3aG5)
library(tidyverse)
setwd("~/Google Drive/Futbol/futstatcat/content/clubs")
teamlist <- read_csv("~/Google Drive/Futbol/teamlist.csv")
for (i in 1:nrow(teamlist)){
teamname <- teamlist[i,1]
lgcode <- teamlist[i,2]
leaguename <- teamlist[i,3]
level2 <- teamlist[i,4]
level2value <- teamlist[i,5]
level3 <- teamlist[i,6]
adjustment <- teamlist[i,7]
fullname <- teamlist[i,8]
a1 <- '---'
a2 <- 'date: "2020-04-01"'
a3 <- paste0('title: "',fullname,'"')
a4 <- paste0('subtitle: "',leaguename,'"')
aa4 <- paste0('summary: "',leaguename,'"')
a5 <- '---'
a6 <- '## Evolució dels punts projectats'
a7 <- '```{r fig.width=8, fig.height=5, echo=F,warning=FALSE,message=FALSE}'
a8 <- 'library(tidyverse)'
a9 <- 'library(ggplot2)'
a10 <- paste0('league <- "',lgcode,'"')
a11 <- paste0('teamname <- "',teamname,'"')
a12 <- paste0('level2 <- ',level2)
a13 <- paste0('level3 <- ',level3)
a14 <- paste0('level2value <- "',level2value,'"')
a15 <- paste0('adjustment <- ',adjustment)
a16 <- 'table <- read.csv(paste0("~/Google Drive/Futbol/final-",league,".csv"))'
a17 <- 'prog <- read.csv(paste0("~/Google Drive/Futbol/prog-",league,".csv"))'
a18 <- 'level1points <- (table$proj.points[1]+table$proj.points[2])/2'
a19 <- 'level2points <- (table$proj.points[level2]+table$proj.points[level2+1])/2'
a20 <- 'level3points <- (table$proj.points[level3]+table$proj.points[level3+1])/2'
a21 <- 'prog <- prog %>% subset(team == teamname)'
a22 <- 'prog$points <- prog$points + adjustment'
a23 <- 'level1df <- NA'
a24 <- 'level1df <- data.frame(level1df, team = rep("Campió", each = nrow(prog)))'
a25 <- 'level1df <- data.frame(level1df, points = rep(level1points, each = nrow(prog)))'
a26 <- 'level1df <- data.frame(level1df, round = rep(min(prog$round):max(prog$round), each = 1))'
a27 <- 'level1df <- level1df %>% select(-level1df)'
a28 <- 'level2df <- NA'
a29 <- 'level2df <- data.frame(level2df, team = rep(level2value, each = nrow(prog)))'
a30 <- 'level2df <- data.frame(level2df, points = rep(level2points, each = nrow(prog)))'
a31 <- 'level2df <- data.frame(level2df, round = rep(min(prog$round):max(prog$round), each = 1))'
a32 <- 'level2df <- level2df %>% select(-level2df)'
a33 <- 'level3df <- NA'
a34 <- 'level3df <- data.frame(level3df, team = rep("Descens", each = nrow(prog)))'
a35 <- 'level3df <- data.frame(level3df, points = rep(level3points, each = nrow(prog)))'
a36 <- 'level3df <- data.frame(level3df, round = rep(min(prog$round):max(prog$round), each = 1))'
a37 <- 'level3df <- level3df %>% select(-level3df)'
a38 <- 'prog <- rbind(prog, level1df)'
a39 <- 'prog <- rbind(prog, level2df)'
a40 <- 'prog <- rbind(prog, level3df)'
a41 <- 'p <- ggplot(data=prog) + geom_line(aes(round,points, color = team), size = 2)'
a42 <- 'p + theme_minimal() + labs(color = "", x = "Jornada", y = "Punts Projectats")'
a43 <- '```'
a44 <- ' '
a45 <- '## Pròxims partits'
a46 <- '```{r echo=F,warning=FALSE,message=FALSE}'
a47 <- 'library(kableExtra)'
a48 <- 'games <- read.csv(paste0("~/Google Drive/Futbol/games-",league,".csv"))'
a49 <- 'games <- games %>% subset(team1 == teamname | team2 == teamname)'
a50 <- 'kable(games, digits = 1, align = "c", row.names = FALSE, col.names = c("Jornada", "Equip", "Guanyar", "Empatar", "Guanyar", "Equip")) %>% kable_styling(bootstrap_options = c("hover", "responsive"), fixed_thead = T) %>% add_header_above(c("2019-20" = 1, "Local" = 2, " " = 1, "Visitant" = 2)) %>% column_spec(2, bold = T, color = "#303030") %>% column_spec(6, bold = T, color = "#303030")'
a51 <- '```'
file <- iconv(teamname,to="ASCII//TRANSLIT")
file <- gsub("[[:space:]]", "", file)
file <- gsub("[[:punct:]]", "", file)
file <- paste0(gsub("'", "", file),lgcode, ".rmd")
writeLines(c(a1,a2,a3,a4,aa4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51), file)
}
